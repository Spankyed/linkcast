{"version":3,"sources":["webpack:///app.entry.js","webpack:///webpack/bootstrap 08feca5a9092b6f623f4","webpack:///./dev/js/popup.js","webpack:///./dev/js/popup/storage.js","webpack:///./dev/js/popup/request.js","webpack:///./config.js","webpack:///./dev/js/common/common.js","webpack:///./dev/js/popup/item.js","webpack:///./dev/js/popup/auth.js","webpack:///./dev/js/popup/message.js","webpack:///./dev/js/popup/group.js","webpack:///./dev/js/popup/user.js","webpack:///./dev/js/popup/comments.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","storage","request","common","item","group","user","auth","comments","plugin","main","bgPage","edit","noticationIntervalTimer","init","chrome","extension","getBackgroundPage","_addEventListeners","manifest","runtime","getManifest","version","$","html","setTheme","userExist","result","flag","_detectSite","info","data","fetchItems","fetchGroups","_activateScroll","_resetNotification","welcomeUser","nickname","getItem","_updateNotificationCount","setInterval","click","remove","groupNotSetMessage","self","registerUser","loginUser","createEditGroup","joinPrivateGroup","addItem","makeGroupDefault","document","on","makeFavourite","deleteItem","showComments","itemClicked","itemForward","groupDDChanged","sendComment","bind","undefined","_tabChanged","editGroup","removeClass","addClass","_logout","e","visibility","target","val","removeUserFromGroup","changePublicRights","joinPublicGroup","leaveGroup","setItem","theme","attr","removeAttr","clearAll","show","preventDefault","page","targets","indexOf","_getRandomQuote","sound","richNotification","getAllPublicGroups","tabs","query","currentWindow","active","payload","action","retrieveSiteMeta","url","title","thumbUrl","getUserId","chrome_id","params","getDataString","get","updateNotification","getNotificationCount","parseInt","wallCount","text","updateCount","commentCount","$panels","scroll","height","innerHeight","scroll_top","scrollTop","scrollHeight","loading","handle","totalPages","stopPropagation","password","register","afterLogin","updateVersion","login","response","quote","author","instance","ready","this","name","localStorage","value","removeItem","clear","config","_this","_sendRequest","type","callback","ajax","getEndpoint","timeout","dataType","success","error","jXHR","status","post","devmode","dev_url","prod_url","console","log","basePropertyOf","object","key","escape","str","htmlEscapes","&","<",">","\"","'","escapeHtmlChar","reUnescapedHtml","replace","unescape","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","unescapeHtmlChar","reEscapedHtml","getRandomToken","randomPool","Uint8Array","crypto","getRandomValues","hex","i","length","toString","lazyLoadImages","each","$img","hide","fadeIn","message","updateType","count","uid","existingItemsCount","pages","rows","forEach","idx","$html","clone","thumbnail","gname","favourite","deleteBtn","comments_count","times_clicked","moment","created_at","add","utcOffset","fromNow","append","prepend","defaultGroup","msg","$handle","parents","item_id","sendClickedStat","find","newClass","hasClass","sync","set","userid","setTimeout","adminText","admin","selected","gid","desc","is_public","group_rights","mode","group_id","group_name","group_password","selector","isAdmin","admin_id","RegExp","user_id","total","$markup","$option","trim","_editGroupSave","logout","defaultGroupName","_updateUsername","commentsPage","totalCommentsPages","$comments","comment","keyCode","color","parent","toggleClass","fetchComments"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDSM,SAAUI,EAAQD,EAASH,GAEhC,YE5CD,IAAMW,GAAUX,EAAQ,GAClBY,EAAUZ,EAAQ,GAClBa,EAASb,EAAQ,GACjBc,EAAOd,EAAQ,GACfe,EAAQf,EAAQ,GAChBgB,EAAOhB,EAAQ,GACfiB,EAAOjB,EAAQ,GACfkB,EAAWlB,EAAQ,IAErBmB,EAAS,WAKT,GAAIC,IAKAC,OAAQ,KAMRC,KAAM,EAMNC,wBAAyB,EAMzBC,KAAM,WACFJ,EAAKC,OAASI,OAAOC,UAAUC,oBAC/BP,EAAKQ,oBACL,IAAIC,GAAWJ,OAAOK,QAAQC,cAC1BC,EAAUH,EAASG,OACvBC,GAAE,YAAYC,KAAKF,GACnBZ,EAAKe,WAELnB,EAAKoB,UAAU,SAAAC,GACNA,EAAOC,MAQRlB,EAAKmB,cAELvB,EAAKwB,KAAOH,EAAOI,KAEnB3B,EAAK4B,WAAW,QAAS,OAAQ,MAEjC3B,EAAM4B,cACNvB,EAAKwB,kBACLxB,EAAKyB,qBAGL7B,EAAK8B,YAAYT,EAAOI,KAAKM,UAG7Bd,EAAE,kBAAkBC,KAChBvB,EAAQqC,QAAQ,qBAIpB5B,EAAK6B,2BACL7B,EAAKG,wBAA0B2B,YAC3B9B,EAAK6B,yBACL,OA5BJhB,EAAE,8BAA8BkB,QAChClB,EAAE,WAAWmB,SAGbrC,EAAMsC,yBAgClBzB,mBAAoB,WAChB,GAAI0B,GAAOlC,CAEXa,GAAE,uBAAuBkB,MAAMG,EAAKC,cACpCtB,EAAE,oBAAoBkB,MAAMG,EAAKE,WAEjCvB,EAAE,mCAAmCkB,MAAMpC,EAAM0C,iBACjDxB,EAAE,wBAAwBkB,MAAMpC,EAAM0C,iBACtCxB,EAAE,eAAekB,MAAMpC,EAAM2C,kBAE7BzB,EAAE,oBAAoBkB,MAAMrC,EAAK6C,SACjC1B,EAAE,kBAAkBkB,MAAM,WACtBpC,EAAM6C,iBAAiB,0BAE3B3B,EAAE4B,UAAUC,GAAG,QAAS,aAAchD,EAAKiD,eAC3C9B,EAAE4B,UAAUC,GAAG,QAAS,eAAgBhD,EAAKkD,YAC7C/B,EAAE4B,UAAUC,GAAG,QAAS,iBAAkB5C,EAAS+C,cACnDhC,EAAE4B,UAAUC,GAAG,QAAS,aAAchD,EAAKoD,aAC3CjC,EAAE4B,UAAUC,GAAG,QAAS,gBAAiBhD,EAAKqD,aAC9ClC,EAAE,wBAAwB6B,GAAG,SAAU/C,EAAMqD,gBAE7CnC,EAAE4B,UAAUC,GACR,QACA,iBACA5C,EAASmD,YAAYC,KAArBC,SAGJtC,EAAE,oBAAoB6B,GAAG,SAAU,WAC/B/C,EAAM6C,iBAAiB,oBACvB9C,EAAK4B,WAAW,QAAS,OAAQ,QAGrCT,EAAE,wBAAwB6B,GAAG,eAAgBR,EAAKkB,aAElDvC,EAAE,eAAekB,MAAMpC,EAAM0D,WAC7BxC,EAAE,0BAA0BkB,MAAM,WAC9BlB,EAAE,eAAeyC,YAAY,QAC7BzC,EAAE,oBAAoB0C,SAAS,UAEnC1C,EAAE,aAAa6B,GAAG,QAAS,UAAWR,EAAKsB,SAC3C3C,EAAE4B,UAAUC,GAAG,QAAS,2BAA4B,SAAAe,GAChD,GAAIC,GAAa7C,EAAE4C,EAAEE,QAAQC,KACX,MAAdF,EACA7C,EAAE,mCAAmCyC,YAAY,QAEjDzC,EAAE,mCAAmC0C,SAAS,UAGtD1C,EAAE,qBAAqB6B,GACnB,QACA,eACA/C,EAAMkE,qBAEVhD,EAAE,qBAAqB6B,GACnB,QACA,oBACA9C,EAAKkE,oBAGTjD,EAAE,qBAAqB6B,GACnB,QACA,cACA/C,EAAMoE,iBAEVlD,EAAE,qBAAqB6B,GACnB,QACA,eACA/C,EAAMqE,YAEVnD,EAAE,wCAAwCkB,MAAM,SAAA0B,GAC5ClE,EAAQ0E,QAAQ,QAASpD,EAAE4C,EAAEE,QAAQC,SAEzC/C,EAAE,wCAAwCkB,MAAM,SAAA0B,GAC5ClE,EAAQ0E,QAAQ,QAASpD,EAAE4C,EAAEE,QAAQC,OACrC1B,EAAKnB,aAETF,EAAE,4CAA4CkB,MAAM,SAAA0B,GAChDlE,EAAQ0E,QAAQ,mBAAoBpD,EAAE4C,EAAEE,QAAQC,SAEpD/C,EAAE,wCAAwCkB,MAAM,SAAA0B,GAC5ClE,EAAQ0E,QAAQ,QAASpD,EAAE4C,EAAEE,QAAQC,UAY7C7C,SAAU,WACN,GAAImD,GAAQ3E,EAAQqC,QAAQ,QACf,OAATsC,IACArD,EAAE,UAAUsD,KAAK,OAAQ,UAAYD,EAAQ,QAC7CrD,EAAE,QAAQuD,WAAW,SAASb,SAASW,KAM/CV,QAAS,WAELjE,EAAQ8E,WACR9E,EAAQ0E,QAAQ,aAAa,GAC7BpD,EAAE,WAAWC,KAAK,IAClBD,EAAE,UAAUyD,OACZzD,EAAE,cAAcC,KAAK,qCACrBD,EAAE,kBAAkBC,KAAK,KAM7BsC,YAAa,SAAAK,GACTA,EAAEc,gBACF,IAAIZ,GAAS9C,EAAE4C,EAAEE,QAAQtC,KAAK,SAC9B3B,GAAK8E,KAAO,EAEZ3D,EAAE,WAAWC,KAAK,+CAElBlB,EAAKoB,UAAU,SAAAC,GACX,GAAKA,EAAOC,KAEL,CACH,GAAMuD,IACF,QACA,WACA,YACA,cACA,cAGJ,IAAIA,EAAQC,QAAQf,MAAY,EAC5BjE,EAAK4B,WAAWqC,EAAQ,OAAQ,UAC7B,IAAe,WAAXA,EACP3D,EAAK2E,sBACF,IAAe,cAAXhB,EAAwB,CAC/BhE,EAAM4B,aACN,IAAI2C,GAAQ3E,EAAQqC,QAAQ,SACxBgD,EAAQrF,EAAQqC,QAAQ,SACxBiD,EAAmBtF,EAAQqC,QAC3B,mBAEU,QAAVsC,GACArD,EACI,+CACIqD,EACA,MACNC,KAAK,UAAW,WAEG,OAArBU,GACAhE,EACI,mDACIgE,EACA,MACNV,KAAK,UAAW,WAER,OAAVS,GACA/D,EACI,+CACI+D,EACA,MACNT,KAAK,UAAW,eAEJ,cAAXR,EACPhE,EAAM4B,cACY,sBAAXoC,EACPhE,EAAMmF,qBACY,2BAAXnB,GACPhE,EAAMmF,yBA/CVnF,GAAMsC,wBAwDlBd,YAAa,WACTd,OAAO0E,KAAKC,OAAQC,eAAe,EAAMC,QAAQ,GAAQ,SACrDH,GAIA,GAAII,IAAYC,OAAQ,WAExBpF,GAAKC,OAAOoF,iBAAiBF,EAAS,SAAA9D,GAC9BA,GAAQA,EAAKiE,MACbzE,EAAE,cAAc+C,IAAIvC,EAAKkE,OACzB1E,EAAE,aAAa+C,IAAIvC,EAAKiE,KACxBzE,EAAE,eAAe+C,IAAIvC,EAAKmE,gBAQ1C/D,mBAAoB,WAChB5B,EAAK4F,UAAU,SAAAC,GACX,GAAI/F,GAAQJ,EAAQqC,QAAQ,eAE5B,IAAc,OAAVjC,EAAgB,CAChB,GAAIgG,IACAhG,MAAOA,EACP+F,UAAWA,EACXN,OAAQ,qBAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqG,IAAIxE,GACZrB,EAAKC,OAAO6F,mBAAmB,OAO3CjE,yBAA0B,WACtB7B,EAAKC,OAAO8F,qBAAqB,SAAA1E,GACzB2E,SAAS3E,EAAK4E,WAAa,IAC3BpF,EAAE,eAAeqF,KAAK,IAAM7E,EAAK4E,UAAY,KAC7CvG,EAAK4B,WAAW,QAAS,UAAWD,EAAK4E,UAAW,MACpDjG,EAAKyB,sBAELuE,SAAS3E,EAAK8E,aAAe,IAC7BtF,EAAE,iBAAiBqF,KAAK,IAAM7E,EAAK8E,YAAc,KACjDzG,EAAK4B,WACD,WACA,UACAD,EAAK8E,YACL,MAEJnG,EAAKyB,sBAELuE,SAAS3E,EAAK+E,cAAgB,IAC9BvF,EAAE,kBAAkBqF,KAAK,IAAM7E,EAAK+E,aAAe,KACnD1G,EAAK4B,WACD,WACA,UACAD,EAAK+E,aACL,MAEJpG,EAAKyB,yBAKjBD,gBAAiB,WACb,GAAI6E,GAAUxF,EACV,4FAGJwF,GAAQC,OAAO,SAAA7C,GACX,GAAI8C,GAAS1F,EAAE4C,EAAEE,QAAQ6C,cACrBC,EAAa5F,EAAE4C,EAAEE,QAAQ+C,YACzBC,EAAe9F,EAAE4C,EAAEE,QAAQ,GAAGgD,aAE9BC,GAAU,EACVC,EAAShG,EAAE,oBAAoBQ,KAAK,SAWxC,OAVIoF,GAAaF,GAAUI,GAAgBC,KAAY,IACnDlH,EAAK8E,OACD9E,EAAK8E,MAAQ9E,EAAKoH,YAClBpH,EAAK4B,WAAWuF,EAAQ,SAAU,KAAM,SAAA/F,GACpC8F,GAAU,KAItBnD,EAAEsD,kBACFtD,EAAEc,kBACK,KAOfpC,aAAc,WACVtC,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAD,UAAWA,EACX/D,SAAUd,EAAE,aAAa+C,MACzBoD,SAAUnG,EAAE,aAAa+C,MACzBwB,OAAQ,eAEZvF,GAAKoH,SAAStB,EAAQ,SAAAtE,GAClBzB,EAAK8B,YAAYiE,EAAOhE,UACxB/B,EAAKsH,WAAW7F,GAChBrB,EAAKC,OAAOkH,qBAOxB/E,UAAW,WACPvC,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAD,UAAWA,EACX/D,SAAUd,EAAE,aAAa+C,MACzBoD,SAAUnG,EAAE,aAAa+C,MACzBwB,OAAQ,YAEZvF,GAAKuH,MAAMzB,EAAQ,SAAAtE,GACfzB,EAAK8B,YAAYiE,EAAOhE,UACxB/B,EAAKsH,WAAW7F,GAChBrB,EAAKC,OAAOkH,qBAIxBxC,gBAAiB,WACb,GAAIgB,IACAP,OAAQ,YAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqG,IAAIxE,EAAM,SAAAgG,GACdxG,EAAE,iBAAiBC,KAAnB,yBAC6BuG,EAASC,MADtC,eAC0DD,EAASE,OADnE,kBAOZ,QACInH,KAAMJ,EAAKI,OAOfoH,EAAWzH,GACfc,GAAE4B,UAAUgF,MAAMD,EAASpH,OFHrB,SAAUpB,EAAQD,GAEvB,YGraDC,GAAOD,QAAU,GAAI,YACjB2I,KAAK9F,QAAU,SAAA+F,GACX,MAAOC,cAAahG,QAAQ+F,IAGhCD,KAAKzD,QAAU,SAAC0D,EAAME,GAClBD,aAAa3D,QAAQ0D,EAAME,IAG/BH,KAAKI,WAAa,SAAAH,GACdC,aAAaE,WAAWH,IAG5BD,KAAKrD,SAAW,WACZuD,aAAaG,WHgbf,SAAU/I,EAAQD,EAASH,GAEhC,YIhcD,IAAMW,GAAUX,EAAQ,GAClBoJ,EAASpJ,EAAQ,GAEjBY,EAAU,GAAI,YAAW,GAAAyI,GAAAP,IAC3BA,MAAKQ,aAAe,SAACC,EAAM9G,EAAM+G,GAC7BvH,EAAEwH,MACE/C,IAAK0C,EAAOM,cACZH,KAAMA,EACN9G,KAAMA,EACNkH,QAAS,IACTC,SAAU,OACVC,QAASL,EACTM,MAAO,SAASC,GACO,KAAfA,EAAKC,QACL/H,EAAE,SAASC,KACP,OACIvB,EAAQqC,QAAQ,YAChB,4DAOxB8F,KAAKmB,KAAO,SAACxH,EAAM+G,GACfH,EAAKC,aAAa,OAAQ7G,EAAM+G,IAGpCV,KAAK7B,IAAM,SAACxE,EAAM+G,GACdH,EAAKC,aAAa,MAAO7G,EAAM+G,IAGvCpJ,GAAOD,QAAUS,GJucX,SAAUR,EAAQD,GAEvB,YKzeDC,GAAOD,QAAU,GAAI,YAAW,GAAAkJ,GAAAP,IAC5BA,MAAKoB,SAAU,EAEfpB,KAAKqB,QAAU,wBACfrB,KAAKsB,SACD,kEAEJtB,KAAKY,YAAc,WAEf,MADAW,SAAQC,IAAIjB,EAAKc,SACVd,EAAKa,QAAUb,EAAKc,QAAUd,EAAKe,YLqf5C,SAAUhK,EAAQD,GAEvB,YMhgBDC,GAAOD,QAAU,GAAI,YAAW,GAAAkJ,GAAAP,IAC5BA,MAAKyB,eAAiB,SAAAC,GAClB,MAAO,UAASC,GACZ,MAAiB,OAAVD,EAAiBjG,OAAYiG,EAAOC,KAInD3B,KAAK4B,OAAS,SAAAC,GAEV,GAAMC,IACFC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SAGLC,EAAiB7B,EAAKkB,eAAeK,GACrCO,EAAkB,UACtB,OAAOR,GAAIS,QAAQD,EAAiBD,IAGxCpC,KAAKuC,SAAW,SAAAV,GAEZ,GAAMW,IACFC,QAAS,IACTC,OAAQ,IACRC,OAAQ,IACRC,SAAU,IACVC,QAAS,KAETC,EAAmBvC,EAAKkB,eAAee,GACvCO,EAAgB,2BACpB,OAAOlB,GAAIS,QAAQS,EAAeD,IAOtC9C,KAAKgD,eAAiB,WAElB,GAAIC,GAAa,GAAIC,YAAW,GAChCC,QAAOC,gBAAgBH,EAEvB,KAAK,GADDI,GAAM,GACDC,EAAI,EAAGA,EAAIL,EAAWM,SAAUD,EACrCD,GAAOJ,EAAWK,GAAGE,SAAS,GAGlC,OAAOH,IAEXrD,KAAK9B,cAAgB,SAAAD,GACjB,GAAI4D,GAAM,KACV,KAAK,GAAIF,KAAO1D,GACZ4D,GAAO,IAAMF,EAAM,IAAM1D,EAAO0D,EAEpC,OAAOE,IAEX7B,KAAKyD,eAAiB,SAAAtE,GAClBA,EAAOuE,KAAK,WACR,GAAIC,GAAOxK,EAAE6G,KACb7G,GAAEwH,MACE/C,IAAK+F,EAAKhK,KAAK,OACf8G,KAAM,OACNI,QAAS,KACTE,QAAS,WACL4C,EACKC,OACAnH,KAAK,MAAOkH,EAAKhK,KAAK,QACtBkK,OAAO,KACPjI,YAAY,QACZc,WAAW,oBN2gB9B,SAAUpF,EAAQD,EAASH,GAEhC,YOplBD,IAAMY,GAAUZ,EAAQ,GAClBW,EAAUX,EAAQ,GAClBiB,EAAOjB,EAAQ,GACfa,EAASb,EAAQ,GACjB4M,EAAU5M,EAAQ,EAExBI,GAAOD,QAAU,GAAI,YAAW,GAAAkJ,GAAAP,IAK5BA,MAAKlD,KAAO,EAMZkD,KAAKZ,WAAa,EAUlBY,KAAKpG,WAAa,SAACuF,EAAQ4E,EAAYC,EAAOtD,GAC1C,GAAIzI,GAAQJ,EAAQqC,QAAQ,eACxBjC,IACAE,EAAK4F,UAAU,SAAAC,GACX,GAAIiG,GAAMpM,EAAQqC,QAAQ,OACpB+D,GACF+F,MAAOA,EACP7E,OAAQA,EAAOmD,QAAQ,IAAK,IAC5BxF,KAAMyD,EAAKzD,KACXkB,UAAWA,EACX/F,MAAOA,EACPyF,OAAQ,cAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqG,IAAIxE,EAAM,SAAAA,GACdR,EAAE,WAAWmB,QACb,IAAI4J,GAAqB/K,EAAEgG,EAAS,UAAUoE,OAC1CnK,EAAO,EAEXmH,GAAKnB,WAAazF,EAAKwK,MAEE,IAArBxK,EAAKyK,KAAKb,SACVnK,EAAO,kBAGXO,EAAKyK,KAAKC,QAAQ,SAACrM,EAAMsM,GACrB,GAAIC,GAAQpL,EAAE,kBAAkBqL,QAE5BpM,EACkB,OAAlBJ,EAAKI,SAAoB,GAAKJ,EAAKI,SAEnCqM,EAAYzM,EAAKyM,SAEC,KAAlBzM,EAAKyM,WAAqC,MAAlBzM,EAAKyM,YAC7BA,EAAY,kBAGhB,IAAIC,GAAkB,SAAVvF,EAAoB,GAApB,IAA6BnH,EAAKiI,KAAlC,IAER0E,EACkB,KAAlB3M,EAAK2M,UACC,iBACA,uBAENC,EAAY5M,EAAKiM,KAAOA,EAAM,SAAW,GAEzCjM,EAAOuM,EACNnL,OACAkJ,QAAQ,aAAcvK,EAAO6J,OAAO5J,EAAKiC,WACzCqI,QAAQ,WAAY4B,GACpB5B,QAAQ,SAAUqC,GAClBrC,QAAQ,UAAWmC,GACnBnC,QAAQ,YAAatK,EAAKT,IAC1B+K,QAAQ,YAAatK,EAAKiM,KAC1B3B,QAAQ,UAAWvK,EAAO6J,OAAO5J,EAAK6F,QACtCyE,QAAQ,QAASvK,EAAO6J,OAAO5J,EAAK4F,MACpC0E,QAAQ,aAAclK,GACtBkK,QAAQ,eAAgBvK,EAAO6J,OAAO8C,IACtCpC,QAAQ,aAAcoC,GACtBpC,QAAQ,WAAYsC,GACpBtC,QAAQ,mBAAoBtK,EAAK6M,gBAEjCvC,QAAQ,kBAAmBtK,EAAK8M,eAChCxC,QACG,eACAyC,OAAO/M,EAAKgN,YACPC,IAAIF,SAASG,YAAa,WAC1BC,UAEb/L,IAAQpB,IAGO,WAAf+L,EACA5K,EAAEgG,EAAS,YAAYiG,OAAOhM,GACR,YAAf2K,EACP5K,EAAEgG,EAAS,YAAYkG,QAAQjM,GACT,SAAf2K,GACP5K,EAAEgG,EAAS,YAAY/F,KAAKA,GAEhCrB,EAAO0L,eAAetK,EAAEgG,EAAS,mBAET,kBAAbuB,IACPA,EAAStH,QAS7B4G,KAAKnF,QAAU,WACX,GAAIgD,GAAQ1E,EAAE,cAAc+C,MACxB0B,EAAMzE,EAAE,aAAa+C,MACrBuI,EAAYtL,EAAE,eAAe+C,MAC7B9D,EAAWe,EAAE,kBAAkB+C,MAC/BjE,EAAQkB,EAAE,wBAAwB+C,MAClCoJ,EAAezN,EAAQqC,QAAQ,gBAC/BV,EAAO,CAGA,KAAPoE,IACAkG,EAAQlH,KAAK,oBAAqB,SAClCpD,EAAO,GAGE,IAATA,GAAuB,IAATqE,IACdiG,EAAQlH,KAAK,gBAAiB,SAC9BpD,EAAO,GAGE,IAATA,IACIvB,GAAkB,KAATA,EACTE,EAAK4F,UAAU,SAASC,GACpB,GAAIC,IACAwG,UAAWA,EACXrM,SAAUA,EACVyF,MAAOA,EACPD,IAAKA,EACL3F,MAAOA,EACP+F,UAAWA,EACXN,OAAQ,eAER/D,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAASA,GACpBA,EAAKH,MACDvB,GAASqN,EACTnM,EAAE,0BAA0BkB,QAE5BlB,EAAE,6BAA6BkB,QAEnClB,EAAE,mBAAmB+C,IAAI,KAEzB4H,EAAQlH,KAAKjD,EAAK4L,IAAK,aAKnCzB,EAAQlH,KACJ,0CACA,WAMhBoD,KAAK5E,YAAc,SAAAW,GACfyJ,QAAUrM,EAAE4C,EAAEE,QAAQwJ,QAAQ,QAC9B,IAAIC,GAAUF,QAAQ7L,KAAK,KAE3BxB,GAAK4F,UAAU,SAASC,GACpB,GAAIC,IACAD,UAAWA,EACXN,OAAQ,cACRgI,QAASA,GAET/L,EAAOrB,KAAK4F,cAAcD,EAC9B3F,MAAKC,OAAOoN,gBAAgBhM,MAOpCqG,KAAK3E,YAAc,SAAAU,GACf,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QAAQwJ,QAAQ,SAC9B7H,EAAM4H,EAAQI,KAAK,cAAcnJ,KAAK,QACtCoB,EAAQ2H,EAAQI,KAAK,cAAcpH,MAEvCrF,GAAE,8BAA8BkB,QAChClB,EAAE,wBAAwB+C,IAAI2B,GAC9B1E,EAAE,uBAAuB+C,IAAI0B,IAGjCoC,KAAK9E,WAAa,SAAAa,GACd,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QAAQwJ,QAAQ,SAC9BC,EAAUF,EAAQ7L,KAAK,KAE3BxB,GAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAyH,QAASA,EACT1H,UAAWA,EACXN,OAAQ,cAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MACLgM,EAAQlL,cASxB0F,KAAK/E,cAAgB,SAAAc,GACjB,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QACdyJ,EAAUF,EAAQC,QAAQ,SAAS9L,KAAK,KAE5CxB,GAAK4F,UAAU,SAASC,GACpB,GAAIN,GAAS,iBACTmI,EAAW,gBAEXL,GAAQM,SAAS,oBACjBpI,EAAS,sBACTmI,EAAW,uBAEf,IAAI5H,IACAD,UAAWA,EACX0H,QAASA,EACThI,OAAQA,GAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACfR,EAAE,kBAAoBuM,EAAU,iBAC3B9J,YAAY,uCACZC,SAASgK,UPqkBxB,SAAUvO,EAAQD,EAASH,GAEhC,YQ5zBD,IAAMY,GAAUZ,EAAQ,GAClBW,EAAUX,EAAQ,GAClB4M,EAAU5M,EAAQ,GAClBa,EAASb,EAAQ,EAEvBI,GAAOD,QAAU,GAAI,YACjB2I,KAAKN,MAAQ,SAACzB,EAAQyC,GAClB,GAAIzC,EAAOhE,SAASsJ,OAAS,GAAKtF,EAAOqB,SAASiE,OAAS,EAAG,CAC1D,GAAI5J,GAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MAEL3B,EAAQ0E,QAAQ,WAAY0B,EAAOhE,UACnCpC,EAAQ0E,QAAQ,YAAY,GAC5B1E,EAAQ0E,QAAQ,YAAa5C,EAAKqE,WAClCrF,OAAOd,QAAQkO,KAAKC,KAAMC,OAAQtM,EAAKqE,YAEf,kBAAb0C,IACPA,EAAS/G,IAGbmK,EAAQlH,KAAKjD,EAAK4L,IAAK,aAOvCvF,KAAKT,SAAW,SAACtB,EAAQyC,GACrB,GAAIzC,EAAOhE,SAASsJ,OAAS,GAAKtF,EAAOqB,SAASiE,OAAS,EAAG,CAC1D,GAAI5J,GAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MACL3B,EAAQ0E,QAAQ,WAAY0B,EAAOhE,UACnCpC,EAAQ0E,QAAQ,YAAY,GAC5B1E,EAAQ0E,QAAQ,YAAa5C,EAAKqE,WAEV,kBAAb0C,IACPA,EAAS/G,IAGbmK,EAAQlH,KAAKjD,EAAK4L,IAAK,aASvCvF,KAAKjC,UAAY,SAAA2C,GACb,GAAI1C,GAAYnG,EAAQqC,QAAQ,YAChC,IAAiB,MAAb8D,EACA0C,EAAS1C,OACN,CACH,GAAIiI,GAASlO,EAAOiL,gBACpBrK,QAAOd,QAAQkO,KAAKC,KAAMC,OAAQA,GAAU,WACxCvF,EAASuF,SRy0BnB,SAAU3O,EAAQD,GAEvB,YSr4BDC,GAAOD,SAMHuF,KAAM,SAAC2I,EAAK9E,GACRtH,EAAE,QAAQC,KAAV,WAA0BqH,EAA1B,cAA4C8E,GAAO3J,YAAY,QAC/DsK,WAAW,WACP/M,EAAE,QAAQ0C,SAAS,SACpB,QTg5BL,SAAUvE,EAAQD,EAASH,GAEhC,YU55BD,IAAIiB,GAAOjB,EAAQ,GACfa,EAASb,EAAQ,GACjBY,EAAUZ,EAAQ,GAClB4M,EAAU5M,EAAQ,GAClBW,EAAUX,EAAQ,EAEtBI,GAAOD,QAAU,GAAI,YAAW,GAAAkJ,GAAAP,IAC5BA,MAAKnG,YAAc,WACf1B,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAD,UAAWA,EACXN,OAAQ,mBAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqG,IAAIxE,EAAM,SAAAA,GACd,GAAI2L,GAAezN,EAAQqC,QAAQ,gBAE/Bd,EAAO,mCAEXO,GAAK0K,QAAQ,SAAArM,GACT,GAAImO,GAAY,GACZC,GAAQ,CACRpO,GAAKoO,QAAUpO,EAAKiM,MACpBkC,EAAY,UACZC,GAAQ,EAEZ,IAAIC,GACAf,IAAiBtN,EAAKsO,IAAM,aAAe,EAC/ClN,+DAC6BpB,EAAKuO,KADlC,qDAE6BvO,EAAKwO,UAFlC,wDAGgCxO,EAAKyO,aAHrC,oDAI4BzO,EAAKoO,MAJjC,gDAKwBpO,EAAK0M,MAL7B,iDAMyB0B,EANzB,0CAOkBC,EAPlB,gDAQyBrO,EAAKsO,IAR9B,6EAUkBtO,EAAK0M,MAVvB,yCAWkByB,EAXlB,gDAcJhN,EACI,8DACFC,KAAKA,GACPmH,EAAKjF,sBAKjB0E,KAAKrF,gBAAkB,SAAAoB,GACnB,GAAI2K,GAAOvN,EAAE4C,EAAEE,QAAQtC,KAAK,SAE5BxB,GAAK4F,UAAU,SAAAC,GACX,GAAIiC,GAAO9G,EAAE,0CAA0C+C,MACnDqK,EAAOpN,EAAE,0CAA0C+C,MACnDsK,EAAYrN,EACZ,+DACF+C,MAEE+B,GACAuI,UAAWA,EACX9I,OAAQ,kBACRM,UAAWA,EACXuI,KAAMA,EACNG,KAAMA,EACNzG,KAAMA,EACNwG,aAActN,EACV,2DACF+C,MAGM,SAARwK,IACAzI,EAAOqI,IAAMnN,EAAE,wCAAwC+C,OAG1C,KAAbsK,IACAvI,EAAOqB,SAAWnG,EACd,6DACF+C,MAGN,IAAIvC,GAAO5B,EAAOmG,cAAcD,EAEpB,KAARgC,EACA6D,EAAQlH,KAAK,kCAAmC,SACjC,IAAR2J,EACPzC,EAAQlH,KAAK,oCAAqC,SAElD9E,EAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MACLL,EAAE,0CAA0C+C,IAAI,IAChD4H,EAAQlH,KAAKjD,EAAK4L,IAAK,WACvBhF,EAAK1G,cACLV,EAAE,0BAA0BkB,SAE5ByJ,EAAQlH,KAAKjD,EAAK4L,IAAK,cAO3CvF,KAAK1D,WAAa,SAAAP,GACd,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QACd0K,EAAWnB,EAAQC,QAAQ,MAAM9L,KAAK,MAE1CxB,GAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAP,OAAQ,aACRM,UAAWA,EACX2I,SAAUA,GAEVhN,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MACLgM,EACK5J,YAAY,mBACZC,SAAS,oBACTzC,KAAK,QACV0K,EAAQlH,KAAKjD,EAAK4L,IAAK,YAEvBzB,EAAQlH,KAAKjD,EAAK4L,IAAK,cAKvCvF,KAAK3D,gBAAkB,SAAAN,GACnB,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QACd0K,EAAWnB,EAAQC,QAAQ,MAAM9L,KAAK,MAE1CxB,GAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAP,OAAQ,kBACRM,UAAWA,EACX2I,SAAUA,GAEVhN,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MACLgM,EACK5J,YAAY,oBACZC,SAAS,mBACTzC,KAAK,SACV0K,EAAQlH,KAAKjD,EAAK4L,IAAK,YAEvBzB,EAAQlH,KAAKjD,EAAK4L,IAAK,cAKvCvF,KAAKpF,iBAAmB,WACpB,GAAIgM,GAAazN,EAAE,kCAAkC+C,MACjD2K,EAAiB1N,EAAE,sCAAsC+C,KAC3C,KAAd0K,EACAzO,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAP,OAAQ,mBACRM,UAAWA,EACX4I,WAAYA,EACZC,eAAgBA,GAEhBlN,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MACLL,EACI,sEACF+C,IAAI,IACNqE,EAAK1G,cACLiK,EAAQlH,KAAKjD,EAAK4L,IAAK,YAEvBzB,EAAQlH,KAAKjD,EAAK4L,IAAK,aAKnCzB,EAAQlH,KAAK,2BAA4B,UAGjDoD,KAAKlF,iBAAmB,SAAAgM,GACpB,GAAIxB,GAAenM,EAAE2N,GAAU5K,KAC/B,IAAoB,KAAhBoJ,EAAqB,CACrB,GAAIrF,GAAO9G,EAAE2N,GAAUlB,KAAK,mBAAmBpH,MAC/C3G,GAAQ0E,QAAQ,eAAgB+I,GAChCzN,EAAQ0E,QAAQ,mBAAoB0D,GACpC6D,EAAQlH,KAAK,wBAA0BqD,EAAM,WAC7C9G,EAAE,kBAAkBC,KAAKvB,EAAQqC,QAAQ,yBAEzC4J,GAAQlH,KAAK,iBAAkB,UAIvCoD,KAAK1E,eAAiB,WAClB,GAAIqL,GAAWxN,EAAE,wBAAwB+C,KACzC/C,GAAE,oBAAoB0C,SAAS,OAC/B,IAAIkL,GAAU5N,EAAE,wCAAwCsD,KAAK,SACzDuK,EAAW7N,EAAE,wCAAwCsD,KACrD,WAGW,SAAXsK,GAEA5N,EAAE,eAAeyC,YAAY,QAC7BzC,EAAE,uBAAuB+C,IACrB/C,EAAE,wCAAwCsD,KAAK,WAGnDtD,EAAE,eAAe0C,SAAS,QAC1B1C,EAAE,uBAAuB+C,IAAI,KAEjC/C,EAAE,sBAAsB0C,SAAS,QACjC1C,EAAE,4BAA4BC,KAAK,IAEnB,KAAZuN,GAA8B,QAAXI,GACnB5O,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAhG,MAAO0O,EACP3I,UAAWA,EACXN,OAAQ,iBAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqG,IAAIxE,EAAM,SAAAA,GACd,GAAIP,GAAO,EACXO,GAAK0K,QAAQ,SAACrM,EAAMsL,GAChB,GAAIiB,GAAQpL,EAAE,mBAAmBqL,QAAQoB,KAAK,SAC1CtL,EAAStC,EAAKT,IAAMyP,EAAW,GAAK,QACxC5N,IAAQmL,EACHnL,OACAkJ,QAAQ,aAActK,EAAKiC,UAC3BqI,QAAQ,YAAatK,EAAKT,IAC1B+K,QAAQ,WAAYhI,GACpBgI,QAAQ,IAAMtK,EAAKyO,aAAe,IAAK,WACvCnE,QAAQ,GAAI2E,QAAO,MAAO,KAAM3D,KAEzCnK,EAAE,4BAA4BC,KAAKA,GACnCD,EAAE,sBAAsByC,YAAY,aAMpDoE,KAAK7D,oBAAsB,SAAAJ,GACvB,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QAAQwJ,QAAQ,cAC9ByB,EAAU1B,EAAQ7L,KAAK,MACvBgN,EAAWxN,EAAE,wBAAwB+C,KAEzC/D,GAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAiJ,QAASA,EACTP,SAAUA,EACVjJ,OAAQ,sBACRM,UAAWA,GAGXrE,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,MACLgM,EAAQlL,SACRwJ,EAAQlH,KAAKjD,EAAK4L,IAAK,YAEvBzB,EAAQlH,KAAKjD,EAAK4L,IAAK,cASvCvF,KAAKzF,mBAAqB,WACkB,OAApC1C,EAAQqC,QAAQ,kBAChBf,EAAE,iBAAiBC,KACf,6IAEJD,EAAE,oBAAoBC,KAClB,kGAKZ4G,KAAK5C,mBAAqB,WACtBjF,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAD,UAAWA,EACXN,OAAQ,sBAER/D,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACf,GAAIP,GAAO,EACXO,GAAK0K,QAAQ,SAAArM,GACT,GAAIkJ,GACe,KAAflJ,EAAKkJ,OACC,gDACA,+CACV9H,IACI,gBACApB,EAAKT,GACL,mDAEAS,EAAKiI,KACL,kBACAjI,EAAKuO,KACL,gDAEAvO,EAAKyO,aACL,+CAEAzO,EAAKmP,MACL,+CAEAjG,EACA,8CAIR/H,EAAE,2BAA2BC,KAAKA,QAK9C4G,KAAKrE,UAAY,SAAAI,GACb5C,EAAE4C,EAAEE,QAAQJ,SAAS,QACrB1C,EAAE,oBAAoByC,YAAY,OAClC,IAAIwL,GAAUjO,EAAE,qBAAqBqL,OACrC4C,GAAQxB,KAAK,iBAAiBtL,SAC9BnB,EAAE,0CACGC,KAAKgO,EAAQhO,QACbwC,YAAY,QAEjB4J,QAAUrM,EAAE,sBACZkO,QAAUlO,EAAE,gDAGZqM,QACKI,KAAK,eACL1J,IAAImL,QAAQ7I,OAAO8D,QAAQ,UAAW,IAAIgF,QAE/C9B,QAAQI,KAAK,eAAe1J,IAAImL,QAAQ1N,KAAK,SAE7CR,EACI,qDACIkO,QAAQ5K,KAAK,aACb,MACNA,KAAK,UAAW,WAElB8E,QAAQC,IAAI6F,QAAQ5K,KAAK,iBACzBtD,EACI,iDACIkO,QAAQ5K,KAAK,gBACb,MACNA,KAAK,UAAW,YAEtBuD,KAAKuH,eAAiB,WAClB,GAAIX,GAAazN,EAAE,uBAAuB+C,MACtCyK,EAAWxN,EAAE,wCAAwC+C,KAEzD/D,GAAK4F,UAAU,SAAAC,GACXlG,EAAQqJ,KACJ,QACIyF,EACA,aACAD,EACA,cACA3I,EACA,wBACJ,SAAArE,GACQA,EAAKH,MACLL,EAAE,oBAAoB0C,SAAS,QAC/BiI,EAAQlH,KAAKjD,EAAK4L,IAAK,WACvBpM,EAAE,eAAeyC,YAAY,QAC7BzC,EAAE,4BAA8BwN,EAAW,MAAMvN,KAC7CwN,EAAa,WAGb/O,EAAQqC,QAAQ,iBAAmByM,IACnC9O,EAAQ0E,QACJ,mBACAqK,EAAa,WAEjBzN,EAAE,kBAAkBC,KAAKwN,EAAa,aAI1C9C,EAAQlH,KAAKjD,EAAK4L,IAAK,gBVw1BzC,SAAUjO,EAAQD,EAASH,GAEhC,YW9tCD,IAAM4M,GAAU5M,EAAQ,GAClBiB,EAAOjB,EAAQ,GACfW,EAAUX,EAAQ,GAClBY,EAAUZ,EAAQ,GAClBe,EAAQf,EAAQ,GAChBa,EAASb,EAAQ,GACjBgB,EAAO,GAAI,YACb8H,KAAKtG,QAKLsG,KAAKhG,YAAc,SAAAC,GACf,GAAIuN,GAAS,oCAEbrO,GAAE,WAAWC,KACT,wBAA0Ba,EAAW,cAAgBuN,GAEzDrO,EAAE,qBAAqB+C,IAAIjC,GAC3Bd,EAAE,UAAUyK,QAKhB5D,KAAKR,WAAa,SAAA7F,GACVA,EAAK2L,eACLzN,EAAQ0E,QAAQ,eAAgB5C,EAAK2L,cACrCzN,EAAQ0E,QAAQ,mBAAoB5C,EAAK8N,kBACzC5P,EAAQ0E,QAAQ,MAAO5C,EAAKsK,KAC5B9K,EAAE,kBAAkBC,KAAKO,EAAK8N,kBAC9BxP,EAAM4B,gBAMdmG,KAAK0H,gBAAkB,SAAA3L,GACnB,GAAI9B,GAAWd,EAAE4C,EAAEE,QAAQC,KACf,KAAR+D,MACA9H,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAhE,SAAUA,EACVyD,OAAQ,iBACRM,UAAWA,GAGXrE,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqG,IAAIxE,EAAM,SAAAA,GACVA,EAAKH,KACLsK,EAAQlH,KAAKjD,EAAK4L,IAAK,WAEvBzB,EAAQlH,KAAKjD,EAAK4L,IAAK,cAO3CvF,KAAK5D,mBAAqB,SAAAL,GACtB,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QAAQwJ,QAAQ,cAC9ByB,EAAU1B,EAAQ7L,KAAK,MACvBgN,EAAWxN,EAAE,wBAAwB+C,MACrCuK,EAAetN,EAAE4C,EAAEE,QAAQC,KAE/B/D,GAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAiJ,QAASA,EACTP,SAAUA,EACVjJ,OAAQ,qBACRM,UAAWA,EACXyI,aAAcA,GAGd9M,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqJ,KAAKxH,EAAM,SAAAA,GACXA,EAAKH,KACLsK,EAAQlH,KAAKjD,EAAK4L,IAAK,WAEvBzB,EAAQlH,KAAKjD,EAAK4L,IAAK,cAUvCvF,KAAK1G,UAAY,SAAAoH,GACb,GAAI/G,IAASH,KAAM,EACiB,QAAhC3B,EAAQqC,QAAQ,YAChBwG,EAAS/G,GAGTxB,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAD,UAAWA,EACXN,OAAQ,iBAGR/D,EAAO5B,EAAOmG,cAAcD,EAEhCnG,GAAQqG,IAAIxE,EAAM,SAAAgG,GACde,EAASf,QAO7BrI,GAAOD,QAAUa,GXquCX,SAAUZ,EAAQD,EAASH,GAEhC,YYt1CD,IAAIiB,GAAOjB,EAAQ,GACfY,EAAUZ,EAAQ,GAClBgB,EAAOhB,EAAQ,GACfa,EAASb,EAAQ,EAErBI,GAAOD,QAAU,GAAI,YAAW,GAAAkJ,GAAAP,IAC5BA,MAAK2H,aAAe,EACpB3H,KAAK4H,mBAAqB,EAE1B5H,KAAKzE,YAAc,SAAAQ,GACf,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QAAQwJ,QAAQ,SAC9BoC,EAAYrC,EAAQI,KAAK,+BACzBF,EAAUF,EAAQ7L,KAAK,MACvBmO,EAAUtC,EAAQI,KAAK,kBAAkB1J,MAAMoL,MAElC,KAAbvL,EAAEgM,SAAiBD,EAAQvE,OAAS,IACpCiC,EAAQI,KAAK,kBAAkB1J,IAAI,IACnC/D,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACAyH,QAASA,EACToC,QAASA,EACT9J,UAAWA,EACXN,OAAQ,gBAEZ5F,GAAQqJ,KAAKpJ,EAAOmG,cAAcD,GAAS,SAAAtE,GACvC,GAAiB,GAAbA,EAAKH,KAAW,CAChB,GAAI+K,GAAQpL,EAAE,qBAAqBqL,QAC/BxM,EAAOuM,EACNnL,OACAkJ,QAAQ,eAAgB3I,EAAKpC,IAC7B+K,QAAQ,cAAepK,EAAKwB,KAAKO,UACjCqI,QAAQ,iBAAkBvK,EAAO6J,OAAOkG,IACxCxF,QAAQ,UAAWpK,EAAKwB,KAAKsO,OAC7B1F,QAAQ,iBAAkB,MAC/BuF,GAAUxC,QAAQrN,UAOtCgI,KAAK7E,aAAe,SAAAY,GAChB,GAAIyJ,GAAUrM,EAAE4C,EAAEE,QAAQwJ,QAAQ,SAC9BC,EAAUF,EAAQ7L,KAAK,MACvBkO,EAAYrC,EAAQI,KAAK,8BAC7BiC,GAAUI,SAASC,YAAY,QAE/BL,EAAUzO,KAAK,cACfmH,EAAK4H,cAAcN,EAAW,OAAQ,KAAMnC,IAGhD1F,KAAKmI,cAAgB,SAAC3C,EAASzB,EAAYC,EAAO0B,EAAShF,GACvDvI,EAAK4F,UAAU,SAAAC,GACX,GAAIC,IACA0J,aAAcpH,EAAKoH,aACnBjC,QAASA,EACT1H,UAAWA,EACXN,OAAQ,gBAER/D,EAAO5B,EAAOmG,cAAcD,EAChCnG,GAAQqG,IAAIxE,EAAM,SAAAA,GACd4G,EAAKqH,mBAAqBjO,EAAKwN,KAC/B,IAAI/N,GAAO,EACPO,GAAKyK,KAAKb,OAAS,GACnB5J,EAAKyK,KAAKC,QAAQ,SAAArM,GACd,GAAIuM,GAAQpL,EAAE,qBAAqBqL,QAE/BxM,EAAOuM,EACNnL,OACAkJ,QAAQ,eAAgBtK,EAAKT,IAC7B+K,QAAQ,cAAetK,EAAKiC,UAC5BqI,QACG,iBACAvK,EAAO6J,OAAO5J,EAAK8P,UAEtBxF,QAAQ,UAAWtK,EAAKgQ,OACxB1F,QACG,iBACAyC,OAAO/M,EAAKgN,YACPC,IAAIF,SAASG,YAAa,WAC1BC,UAEb/L,IAAQpB,IAGG,SAAf+L,EACAyB,EAAQpM,KAAKA,GACS,WAAf2K,EACPyB,EAAQJ,OAAOhM,GACO,YAAf2K,GACPyB,EAAQH,QAAQjM,GAEI,kBAAbsH,IACPA,EAAStH","file":"app.entry.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!*************************!*\\\n  !*** ./dev/js/popup.js ***!\n  \\*************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t/* ========================================================================\n\t * @title - Share news, articles and music with your friends\n\t * @author - Abhishek Saha\n\t * @description - This is the main engine that takes care of everything\n\t * ======================================================================== */\n\tvar storage = __webpack_require__(/*! ./popup/storage */ 1);\n\tvar request = __webpack_require__(/*! ./popup/request */ 2);\n\tvar common = __webpack_require__(/*! ./common/common */ 4);\n\tvar item = __webpack_require__(/*! ./popup/item */ 5);\n\tvar group = __webpack_require__(/*! ./popup/group */ 8);\n\tvar user = __webpack_require__(/*! ./popup/user */ 9);\n\tvar auth = __webpack_require__(/*! ./popup/auth */ 6);\n\tvar comments = __webpack_require__(/*! ./popup/comments */ 10);\n\t\n\tvar plugin = function plugin() {\n\t    /**\n\t     * Private object containing the whole al =>ity of the plugin\n\t     * @type {object}\n\t     */\n\t    var main = {\n\t        /**\n\t         * Holds the background page link\n\t         * @type {String}\n\t         */\n\t        bgPage: null,\n\t\n\t        /**\n\t         * Future purpose\n\t         * @type {Number}\n\t         */\n\t        edit: 0,\n\t\n\t        /**\n\t         * Timer to ping the background page for notifications\n\t         * @type {Number}\n\t         */\n\t        noticationIntervalTimer: 0,\n\t\n\t        /**\n\t         * Start the engine\n\t         * @return {null}\n\t         */\n\t        init: function init() {\n\t            main.bgPage = chrome.extension.getBackgroundPage();\n\t            main._addEventListeners();\n\t            var manifest = chrome.runtime.getManifest();\n\t            var version = manifest.version;\n\t            $(\".version\").html(version);\n\t            main.setTheme();\n\t\n\t            user.userExist(function (result) {\n\t                if (!result.flag) {\n\t                    /* If user does not exist or not logged in show settings tab */\n\t                    $('a[data-target=\"#settings\"]').click();\n\t                    $(\"#loader\").remove();\n\t\n\t                    /*The wall and update tab should show a message asking the user what to do*/\n\t                    group.groupNotSetMessage();\n\t                } else {\n\t                    main._detectSite();\n\t\n\t                    user.info = result.data;\n\t\n\t                    item.fetchItems(\"#wall\", \"html\", null);\n\t\n\t                    group.fetchGroups();\n\t                    main._activateScroll();\n\t                    main._resetNotification();\n\t\n\t                    /* If the user is logged in, show a welcome message */\n\t                    user.welcomeUser(result.data.nickname);\n\t\n\t                    /* Show which group the user is connected to */\n\t                    $(\"#group-display\").html(storage.getItem(\"defaultGroupName\"));\n\t\n\t                    /* Show notifications */\n\t                    main._updateNotificationCount();\n\t                    main.noticationIntervalTimer = setInterval(main._updateNotificationCount, 2000);\n\t                }\n\t            });\n\t        },\n\t        /**\n\t         * Event listeners\n\t         */\n\t        _addEventListeners: function _addEventListeners() {\n\t            var self = main;\n\t\n\t            $(\"button.register-btn\").click(self.registerUser);\n\t            $(\"button.login-btn\").click(self.loginUser);\n\t\n\t            $(\"#tab-create-group #create-group\").click(group.createEditGroup);\n\t            $(\"#edit-group-save-btn\").click(group.createEditGroup);\n\t            $(\"#join-group\").click(group.joinPrivateGroup);\n\t\n\t            $(\"#add-item button\").click(item.addItem);\n\t            $(\"#default-group\").click(function () {\n\t                group.makeGroupDefault(\"#settings #groups-dd\");\n\t            });\n\t            $(document).on(\"click\", \".favourite\", item.makeFavourite);\n\t            $(document).on(\"click\", \".delete-item\", item.deleteItem);\n\t            $(document).on(\"click\", \".comments-item\", comments.showComments);\n\t            $(document).on(\"click\", \".item-link\", item.itemClicked);\n\t            $(document).on(\"click\", \".forward-item\", item.itemForward);\n\t            $(\"#settings #groups-dd\").on(\"change\", group.groupDDChanged);\n\t\n\t            $(document).on(\"keyup\", \".comment-input\", comments.sendComment.bind(undefined));\n\t\n\t            $(\"#wall #groups-dd\").on(\"change\", function () {\n\t                group.makeGroupDefault(\"#wall #groups-dd\");\n\t                item.fetchItems(\"#wall\", \"html\", null);\n\t            });\n\t\n\t            $('a[data-toggle=\"tab\"]').on(\"shown.bs.tab\", self._tabChanged);\n\t\n\t            $(\"#edit-group\").click(group.editGroup);\n\t            $(\"#edit-group-cancel-btn\").click(function () {\n\t                $(\"#edit-group\").removeClass(\"hide\");\n\t                $(\".editgroup-block\").addClass(\"hide\");\n\t            });\n\t            $(\"#settings\").on(\"click\", \"#logout\", self._logout);\n\t            $(document).on(\"click\", \"#group-visibility .radio\", function (e) {\n\t                var visibility = $(e.target).val();\n\t                if (visibility == \"0\") {\n\t                    $(\".tab-pane.active #group-private\").removeClass(\"hide\");\n\t                } else {\n\t                    $(\".tab-pane.active #group-private\").addClass(\"hide\");\n\t                }\n\t            });\n\t            $(\"#tab-manage-group\").on(\"click\", \".remove-user\", group.removeUserFromGroup);\n\t            $(\"#tab-manage-group\").on(\"click\", \".user-item .radio\", user.changePublicRights);\n\t\n\t            $(\"#tab-public-group\").on(\"click\", \".group-join\", group.joinPublicGroup);\n\t            $(\"#tab-public-group\").on(\"click\", \".group-leave\", group.leaveGroup);\n\t            $(\"#tab-customize #sound-setting .radio\").click(function (e) {\n\t                storage.setItem(\"sound\", $(e.target).val());\n\t            });\n\t            $(\"#tab-customize #theme-setting .radio\").click(function (e) {\n\t                storage.setItem(\"theme\", $(e.target).val());\n\t                self.setTheme();\n\t            });\n\t            $(\"#tab-customize #rich-notification .radio\").click(function (e) {\n\t                storage.setItem(\"richNotification\", $(e.target).val());\n\t            });\n\t            $(\"#tab-customize #sound-setting .radio\").click(function (e) {\n\t                storage.setItem(\"sound\", $(e.target).val());\n\t            });\n\t            /**\n\t             * Not allowing user to update username.\n\t             * Maybe a future release\n\t             */\n\t            // $(\"#settings\").on('click','#edit-uname', () =>{\n\t            //     $(\"#edit-name-block\").removeClass('hide');\n\t            // })\n\t\n\t            // $(\"#update-uname-btn\").click(self._updateUsername);\n\t        },\n\t        setTheme: function setTheme() {\n\t            var theme = storage.getItem(\"theme\");\n\t            if (theme != null) {\n\t                $(\"#theme\").attr(\"href\", \"css/bs.\" + theme + \".css\");\n\t                $(\"body\").removeAttr(\"class\").addClass(theme);\n\t            }\n\t        },\n\t        /**\n\t         * Logout a user\n\t         */\n\t        _logout: function _logout() {\n\t            //Remove all information from the local store.\n\t            storage.clearAll();\n\t            storage.setItem(\"loggedOut\", true);\n\t            $(\".status\").html(\"\");\n\t            $(\".step1\").show();\n\t            $(\"#groups-dd\").html(\"<option value='0'>Select</option>\");\n\t            $(\"#group-display\").html(\"\");\n\t        },\n\t        /**\n\t         * Triggers when a tab is changed\n\t         * @param  {event}\n\t         */\n\t        _tabChanged: function _tabChanged(e) {\n\t            e.preventDefault();\n\t            var target = $(e.target).data(\"target\"); // activated tab\n\t            item.page = 1;\n\t\n\t            $(\"ul.chat\").html('<div id=\"loader\" class=\"cssload-aim\"></div>');\n\t\n\t            user.userExist(function (result) {\n\t                if (!result.flag) {\n\t                    group.groupNotSetMessage();\n\t                } else {\n\t                    var targets = [\"#wall\", \"#updates\", \"#comments\", \"#user-links\", \"#favourites\"];\n\t\n\t                    if (targets.indexOf(target) !== -1) {\n\t                        item.fetchItems(target, \"html\", null);\n\t                    } else if (target === \"#about\") {\n\t                        main._getRandomQuote();\n\t                    } else if (target === \"#settings\") {\n\t                        group.fetchGroups();\n\t                        var theme = storage.getItem(\"theme\");\n\t                        var sound = storage.getItem(\"sound\");\n\t                        var richNotification = storage.getItem(\"richNotification\");\n\t                        if (theme !== null) {\n\t                            $(\"#tab-customize #theme-setting .radio[value='\" + theme + \"']\").attr(\"checked\", \"checked\");\n\t                        }\n\t                        if (richNotification !== null) {\n\t                            $(\"#tab-customize #rich-notification .radio[value='\" + richNotification + \"']\").attr(\"checked\", \"checked\");\n\t                        }\n\t                        if (sound !== null) {\n\t                            $(\"#tab-customize #sound-setting .radio[value='\" + sound + \"']\").attr(\"checked\", \"checked\");\n\t                        }\n\t                    } else if (target === \"#add-item\") {\n\t                        group.fetchGroups();\n\t                    } else if (target === \"#tab-public-group\") {\n\t                        group.getAllPublicGroups();\n\t                    } else if (target === \"#tab-join-public-group\") {\n\t                        group.getAllPublicGroups();\n\t                    }\n\t                }\n\t            });\n\t        },\n\t\n\t        /**\n\t         * Detects if the active chrome tab is youtube or soudcloud\n\t         */\n\t        _detectSite: function _detectSite() {\n\t            chrome.tabs.query({ currentWindow: true, active: true }, function (tabs) {\n\t                //var url = tabs[0].url;\n\t\n\t                var payload = { action: \"get-meta\" };\n\t\n\t                main.bgPage.retrieveSiteMeta(payload, function (data) {\n\t                    if (data && data.url) {\n\t                        $(\"#item-name\").val(data.title);\n\t                        $(\"#item-url\").val(data.url);\n\t                        $(\"#item-thumb\").val(data.thumbUrl);\n\t                    }\n\t                });\n\t            });\n\t        },\n\t        /**\n\t         * Reset the extension notification count to 0\n\t         */\n\t        _resetNotification: function _resetNotification() {\n\t            auth.getUserId(function (chrome_id) {\n\t                var group = storage.getItem(\"defaultGroup\");\n\t\n\t                if (group !== null) {\n\t                    var params = {\n\t                        group: group,\n\t                        chrome_id: chrome_id,\n\t                        action: \"resetNotification\"\n\t                    };\n\t                    var data = common.getDataString(params);\n\t                    request.get(data);\n\t                    main.bgPage.updateNotification(0);\n\t                }\n\t            });\n\t        },\n\t        /**\n\t         * Update the notification count of the tabs\n\t         */\n\t        _updateNotificationCount: function _updateNotificationCount() {\n\t            main.bgPage.getNotificationCount(function (data) {\n\t                if (parseInt(data.wallCount) > 0) {\n\t                    $(\"#wall-count\").text(\"(\" + data.wallCount + \")\");\n\t                    item.fetchItems(\"#wall\", \"prepend\", data.wallCount, null);\n\t                    main._resetNotification();\n\t                }\n\t                if (parseInt(data.updateCount) > 0) {\n\t                    $(\"#update-count\").text(\"(\" + data.updateCount + \")\");\n\t                    item.fetchItems(\"#updates\", \"prepend\", data.updateCount, null);\n\t                    main._resetNotification();\n\t                }\n\t                if (parseInt(data.commentCount) > 0) {\n\t                    $(\"#comment-count\").text(\"(\" + data.commentCount + \")\");\n\t                    item.fetchItems(\"#updates\", \"prepend\", data.commentCount, null);\n\t                    main._resetNotification();\n\t                }\n\t            });\n\t        },\n\t\n\t        _activateScroll: function _activateScroll() {\n\t            var $panels = $(\"#wall .panel-body, #updates .panel-body, #favourites .panel-body, #user-links .panel-body\");\n\t\n\t            $panels.scroll(function (e) {\n\t                var height = $(e.target).innerHeight();\n\t                var scroll_top = $(e.target).scrollTop();\n\t                var scrollHeight = $(e.target)[0].scrollHeight;\n\t\n\t                var loading = true;\n\t                var handle = $(\"#myTab .active a\").data(\"target\");\n\t                if (scroll_top + height == scrollHeight && loading === true) {\n\t                    item.page++;\n\t                    if (item.page <= item.totalPages) {\n\t                        item.fetchItems(handle, \"append\", null, function (html) {\n\t                            loading = false;\n\t                        });\n\t                    }\n\t                }\n\t                e.stopPropagation();\n\t                e.preventDefault();\n\t                return false;\n\t            });\n\t        },\n\t\n\t        /**\n\t         * Register a new user.\n\t         */\n\t        registerUser: function registerUser() {\n\t            auth.getUserId(function (chrome_id) {\n\t                var params = {\n\t                    chrome_id: chrome_id,\n\t                    nickname: $(\"#nickname\").val(),\n\t                    password: $(\"#password\").val(),\n\t                    action: \"registerUser\"\n\t                };\n\t                auth.register(params, function (data) {\n\t                    user.welcomeUser(params.nickname);\n\t                    user.afterLogin(data);\n\t                    main.bgPage.updateVersion();\n\t                });\n\t            });\n\t        },\n\t        /**\n\t         * Login\n\t         */\n\t        loginUser: function loginUser() {\n\t            auth.getUserId(function (chrome_id) {\n\t                var params = {\n\t                    chrome_id: chrome_id,\n\t                    nickname: $(\"#nickname\").val(),\n\t                    password: $(\"#password\").val(),\n\t                    action: \"loginUser\"\n\t                };\n\t                auth.login(params, function (data) {\n\t                    user.welcomeUser(params.nickname);\n\t                    user.afterLogin(data);\n\t                    main.bgPage.updateVersion();\n\t                });\n\t            });\n\t        },\n\t        _getRandomQuote: function _getRandomQuote() {\n\t            var params = {\n\t                action: \"getQuote\"\n\t            };\n\t            var data = common.getDataString(params);\n\t            request.get(data, function (response) {\n\t                $(\"#random_quote\").html(\"<p class='ext-center'>\" + response.quote + \"<br/>&dash; \" + response.author + \" &dash;</p>\");\n\t            });\n\t        }\n\t    };\n\t\n\t    return {\n\t        init: main.init\n\t    };\n\t};\n\t\n\t/**\n\t * Start the plugin\n\t */\n\tvar instance = plugin();\n\t$(document).ready(instance.init);\n\n/***/ }),\n/* 1 */\n/*!*********************************!*\\\n  !*** ./dev/js/popup/storage.js ***!\n  \\*********************************/\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = new function () {\n\t    this.getItem = function (name) {\n\t        return localStorage.getItem(name);\n\t    };\n\t\n\t    this.setItem = function (name, value) {\n\t        localStorage.setItem(name, value);\n\t    };\n\t\n\t    this.removeItem = function (name) {\n\t        localStorage.removeItem(name);\n\t    };\n\t\n\t    this.clearAll = function () {\n\t        localStorage.clear();\n\t    };\n\t}();\n\n/***/ }),\n/* 2 */\n/*!*********************************!*\\\n  !*** ./dev/js/popup/request.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar storage = __webpack_require__(/*! ./storage */ 1);\n\tvar config = __webpack_require__(/*! ../../../config */ 3);\n\tdebugger;\n\tvar request = new function () {\n\t    var _this = this;\n\t\n\t    this._sendRequest = function (type, data, callback) {\n\t        $.ajax({\n\t            url: config.getEndpoint(),\n\t            type: type,\n\t            data: data,\n\t            timeout: 4000,\n\t            dataType: \"json\",\n\t            success: callback,\n\t            error: function error(jXHR) {\n\t                if (jXHR.status != 200) {\n\t                    $(\".chat\").html(\"Hey \" + storage.getItem(\"nickname\") + \", wait, server is busy :( Please try after sometime!\");\n\t                }\n\t            }\n\t        });\n\t    };\n\t\n\t    this.post = function (data, callback) {\n\t        _this._sendRequest(\"POST\", data, callback);\n\t    };\n\t\n\t    this.get = function (data, callback) {\n\t        _this._sendRequest(\"GET\", data, callback);\n\t    };\n\t}();\n\tmodule.exports = request;\n\n/***/ }),\n/* 3 */\n/*!*******************!*\\\n  !*** ./config.js ***!\n  \\*******************/\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = new function () {\n\t    var _this = this;\n\t\n\t    this.devmode = true;\n\t\n\t    this.dev_url = \"http://localhost:8000\";\n\t    this.prod_url = \"http://playground.ajaxtown.com/youtube_chrome_backend/index.php\";\n\t\n\t    this.getEndpoint = function () {\n\t        console.log(_this.dev_url);\n\t        return _this.devmode ? _this.dev_url : _this.prod_url;\n\t    };\n\t}();\n\n/***/ }),\n/* 4 */\n/*!*********************************!*\\\n  !*** ./dev/js/common/common.js ***!\n  \\*********************************/\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = new function () {\n\t    var _this = this;\n\t\n\t    this.basePropertyOf = function (object) {\n\t        return function (key) {\n\t            return object == null ? undefined : object[key];\n\t        };\n\t    };\n\t\n\t    this.escape = function (str) {\n\t        /** Used to map characters to HTML entities. */\n\t        var htmlEscapes = {\n\t            \"&\": \"&amp;\",\n\t            \"<\": \"&lt;\",\n\t            \">\": \"&gt;\",\n\t            '\"': \"&quot;\",\n\t            \"'\": \"&#39;\"\n\t        };\n\t\n\t        var escapeHtmlChar = _this.basePropertyOf(htmlEscapes);\n\t        var reUnescapedHtml = /[&<>\"']/g;\n\t        return str.replace(reUnescapedHtml, escapeHtmlChar);\n\t    };\n\t\n\t    this.unescape = function (str) {\n\t        /** Used to map HTML entities to characters. */\n\t        var htmlUnescapes = {\n\t            \"&amp;\": \"&\",\n\t            \"&lt;\": \"<\",\n\t            \"&gt;\": \">\",\n\t            \"&quot;\": '\"',\n\t            \"&#39;\": \"'\"\n\t        };\n\t        var unescapeHtmlChar = _this.basePropertyOf(htmlUnescapes);\n\t        var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;\n\t        return str.replace(reEscapedHtml, unescapeHtmlChar);\n\t    };\n\t\n\t    /**\n\t     * Generates a hash\n\t     * @return {String}\n\t     */\n\t    this.getRandomToken = function () {\n\t        // E.g. 8 * 32 = 256 bits token\n\t        var randomPool = new Uint8Array(32);\n\t        crypto.getRandomValues(randomPool);\n\t        var hex = \"\";\n\t        for (var i = 0; i < randomPool.length; ++i) {\n\t            hex += randomPool[i].toString(16);\n\t        }\n\t        // E.g. db18458e2782b2b77e36769c569e263a53885a9944dd0a861e5064eac16f1a\n\t        return hex;\n\t    };\n\t    this.getDataString = function (params) {\n\t        var str = \"1=1\";\n\t        for (var key in params) {\n\t            str += \"&\" + key + \"=\" + params[key];\n\t        }\n\t        return str;\n\t    };\n\t    this.lazyLoadImages = function (handle) {\n\t        handle.each(function () {\n\t            var $img = $(this);\n\t            $.ajax({\n\t                url: $img.data(\"src\"),\n\t                type: \"HEAD\",\n\t                timeout: 1200,\n\t                success: function success() {\n\t                    $img.hide().attr(\"src\", $img.data(\"src\")).fadeIn(1000).removeClass(\"lazy\").removeAttr(\"data-src\");\n\t                }\n\t            });\n\t        });\n\t    };\n\t}();\n\n/***/ }),\n/* 5 */\n/*!******************************!*\\\n  !*** ./dev/js/popup/item.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar request = __webpack_require__(/*! ./request */ 2);\n\tvar storage = __webpack_require__(/*! ./storage */ 1);\n\tvar auth = __webpack_require__(/*! ./auth */ 6);\n\tvar common = __webpack_require__(/*! ../common/common */ 4);\n\tvar message = __webpack_require__(/*! ./message */ 7);\n\t\n\tmodule.exports = new function () {\n\t    var _this = this;\n\t\n\t    /**\n\t     * Holds the current page number\n\t     * @type {Number}\n\t     */\n\t    this.page = 1;\n\t\n\t    /**\n\t     * Total number of pages available\n\t     * @type {Number}\n\t     */\n\t    this.totalPages = 0;\n\t\n\t    /**\n\t     * Fetch items from the server\n\t     * @param  {Int} Current Page\n\t     * @param  {String} Determines active tab\n\t     * @param  {Function} Callback function\n\t     * @param  {String} Determines if the items needs to be appended or prepended or pasted\n\t     * @param  {Number} Total items to fetch\n\t     */\n\t    this.fetchItems = function (handle, updateType, count, callback) {\n\t        var group = storage.getItem(\"defaultGroup\");\n\t        if (group) {\n\t            auth.getUserId(function (chrome_id) {\n\t                var uid = storage.getItem(\"uid\");\n\t                var params = {\n\t                    count: count,\n\t                    handle: handle.replace(\"#\", \"\"),\n\t                    page: _this.page,\n\t                    chrome_id: chrome_id,\n\t                    group: group,\n\t                    action: \"readTracks\"\n\t                };\n\t                var data = common.getDataString(params);\n\t                request.get(data, function (data) {\n\t                    $(\"#loader\").remove();\n\t                    var existingItemsCount = $(handle + \" .item\").length;\n\t                    var html = \"\";\n\t\n\t                    _this.totalPages = data.pages;\n\t\n\t                    if (data.rows.length === 0) {\n\t                        html = \"Nothing found.\";\n\t                    }\n\t\n\t                    data.rows.forEach(function (item, idx) {\n\t                        var $html = $(\"#item-template\").clone();\n\t\n\t                        var comments = item.comments === null ? \"\" : item.comments;\n\t\n\t                        var thumbnail = item.thumbnail;\n\t\n\t                        if (item.thumbnail == \"\" || item.thumbnail == null) {\n\t                            thumbnail = \"assets/weed.jpg\";\n\t                        }\n\t\n\t                        var gname = handle == \"#wall\" ? \"\" : \"[\" + item.name + \"]\";\n\t\n\t                        var favourite = item.favourite == \"1\" ? \"glyphicon-star\" : \"glyphicon-star-empty\";\n\t\n\t                        var deleteBtn = item.uid == uid ? \"Delete\" : \"\";\n\t\n\t                        var item = $html.html().replace(\"{NICKNAME}\", common.escape(item.nickname)).replace(\"{SRNO}\", ++existingItemsCount).replace(\"{STAR}\", favourite).replace(\"{THUMB}\", thumbnail).replace(\"{ITEM_ID}\", item.id).replace(\"{USER_ID}\", item.uid).replace(\"{TITLE}\", common.escape(item.title)).replace(\"{URL}\", common.escape(item.url)).replace(\"{COMMENTS}\", comments).replace(\"{GROUP_NAME}\", common.escape(gname)).replace(\"{GROUP_ID}\", gname).replace(\"{DELETE}\", deleteBtn).replace(\"{COMMENTS_COUNT}\", item.comments_count)\n\t                        //.replace(\"{COLOR}\", item.color)\n\t                        .replace(\"{TIMES_CLICKED}\", item.times_clicked).replace(\"{CREATED_AT}\", moment(item.created_at).add(moment().utcOffset(), \"minutes\").fromNow());\n\t                        html += item;\n\t                    });\n\t\n\t                    if (updateType === \"append\") {\n\t                        $(handle + \" ul.chat\").append(html);\n\t                    } else if (updateType === \"prepend\") {\n\t                        $(handle + \" ul.chat\").prepend(html);\n\t                    } else if (updateType === \"html\") {\n\t                        $(handle + \" ul.chat\").html(html);\n\t                    }\n\t                    common.lazyLoadImages($(handle + \" ul.chat .lazy\"));\n\t\n\t                    if (typeof callback === \"function\") {\n\t                        callback(html);\n\t                    }\n\t                });\n\t            });\n\t        }\n\t    };\n\t    /**\n\t     * Publish a new Item\n\t     */\n\t    this.addItem = function () {\n\t        var title = $(\"#item-name\").val();\n\t        var url = $(\"#item-url\").val();\n\t        var thumbnail = $(\"#item-thumb\").val();\n\t        var comments = $(\"#item-comments\").val();\n\t        var group = $(\"#add-item #groups-dd\").val();\n\t        var defaultGroup = storage.getItem(\"defaultGroup\");\n\t        var flag = 1;\n\t\n\t        //Validations\n\t        if (url == \"\") {\n\t            message.show(\"Enter a valid URL\", \"Error\");\n\t            flag = 0;\n\t        }\n\t\n\t        if (flag === 1 && title == \"\") {\n\t            message.show(\"Enter a Title\", \"Error\");\n\t            flag = 0;\n\t        }\n\t\n\t        if (flag === 1) {\n\t            if (group && group != \"0\") {\n\t                auth.getUserId(function (chrome_id) {\n\t                    var params = {\n\t                        thumbnail: thumbnail,\n\t                        comments: comments,\n\t                        title: title,\n\t                        url: url,\n\t                        group: group,\n\t                        chrome_id: chrome_id,\n\t                        action: \"insertTrack\"\n\t                    };\n\t                    var data = common.getDataString(params);\n\t\n\t                    request.post(data, function (data) {\n\t                        if (data.flag) {\n\t                            if (group == defaultGroup) {\n\t                                $('a[data-target=\"#wall\"]').click();\n\t                            } else {\n\t                                $('a[data-target=\"#updates\"]').click();\n\t                            }\n\t                            $(\"#add-item input\").val(\"\");\n\t                        } else {\n\t                            message.show(data.msg, \"Sorry\");\n\t                        }\n\t                    });\n\t                });\n\t            } else {\n\t                message.show(\"Select a group as default from Settings\", \"Error\");\n\t            }\n\t        }\n\t    };\n\t\n\t    this.itemClicked = function (e) {\n\t        $handle = $(e.target).parents(\".item\");\n\t        var item_id = $handle.data(\"id\");\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                chrome_id: chrome_id,\n\t                action: \"itemClicked\",\n\t                item_id: item_id\n\t            };\n\t            var data = main.getDataString(params);\n\t            main.bgPage.sendClickedStat(data);\n\t            // request.post(data, function(){\n\t\n\t            // });\n\t        });\n\t    };\n\t\n\t    this.itemForward = function (e) {\n\t        var $handle = $(e.target).parents(\".item\");\n\t        var url = $handle.find(\".item-link\").attr(\"href\");\n\t        var title = $handle.find(\".item-link\").text();\n\t\n\t        $('a[data-target=\"#add-item\"]').click();\n\t        $(\"#add-item #item-name\").val(title);\n\t        $(\"#add-item #item-url\").val(url);\n\t    };\n\t\n\t    this.deleteItem = function (e) {\n\t        var $handle = $(e.target).parents(\".item\");\n\t        var item_id = $handle.data(\"id\");\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                item_id: item_id,\n\t                chrome_id: chrome_id,\n\t                action: \"deleteItem\"\n\t            };\n\t            var data = common.getDataString(params);\n\t            request.post(data, function (data) {\n\t                if (data.flag) {\n\t                    $handle.remove();\n\t                } else {}\n\t            });\n\t        });\n\t    };\n\t    /**\n\t     * Make the item your favourite\n\t     */\n\t    this.makeFavourite = function (e) {\n\t        var $handle = $(e.target);\n\t        var item_id = $handle.parents(\".item\").data(\"id\");\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var action = \"addToFavourite\";\n\t            var newClass = \"glyphicon-star\";\n\t\n\t            if ($handle.hasClass(\"glyphicon-star\")) {\n\t                action = \"removeFromFavourite\";\n\t                newClass = \"glyphicon-star-empty\";\n\t            }\n\t            var params = {\n\t                chrome_id: chrome_id,\n\t                item_id: item_id,\n\t                action: action\n\t            };\n\t            var data = common.getDataString(params);\n\t            request.post(data, function (data) {\n\t                $('.item[data-id=\"' + item_id + '\"] .favourite').removeClass(\"glyphicon-star glyphicon-star-empty\").addClass(newClass);\n\t            });\n\t        });\n\t    };\n\t}();\n\n/***/ }),\n/* 6 */\n/*!******************************!*\\\n  !*** ./dev/js/popup/auth.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar request = __webpack_require__(/*! ./request */ 2);\n\tvar storage = __webpack_require__(/*! ./storage */ 1);\n\tvar message = __webpack_require__(/*! ./message */ 7);\n\tvar common = __webpack_require__(/*! ../common/common */ 4);\n\t\n\tmodule.exports = new function () {\n\t    this.login = function (params, callback) {\n\t        if (params.nickname.length > 0 && params.password.length > 0) {\n\t            var data = common.getDataString(params);\n\t            request.post(data, function (data) {\n\t                if (data.flag) {\n\t                    //store some basic information in the localStorage\n\t                    storage.setItem(\"nickname\", params.nickname);\n\t                    storage.setItem(\"loggedIn\", true);\n\t                    storage.setItem(\"chrome_id\", data.chrome_id);\n\t                    chrome.storage.sync.set({ userid: data.chrome_id });\n\t\n\t                    if (typeof callback === \"function\") {\n\t                        callback(data);\n\t                    }\n\t                } else {\n\t                    message.show(data.msg, \"Error\");\n\t                }\n\t            });\n\t        }\n\t    };\n\t\n\t    // handle registration\n\t    this.register = function (params, callback) {\n\t        if (params.nickname.length > 0 && params.password.length > 0) {\n\t            var data = common.getDataString(params);\n\t\n\t            request.post(data, function (data) {\n\t                if (data.flag) {\n\t                    storage.setItem(\"nickname\", params.nickname);\n\t                    storage.setItem(\"loggedIn\", true);\n\t                    storage.setItem(\"chrome_id\", data.chrome_id);\n\t\n\t                    if (typeof callback === \"function\") {\n\t                        callback(data);\n\t                    }\n\t                } else {\n\t                    message.show(data.msg, \"Error\");\n\t                }\n\t            });\n\t        }\n\t    };\n\t    /**\n\t     * Checks if the user id exist. If not, it assigns a new user id\n\t     * @param  {Function} Callback function\n\t     */\n\t    this.getUserId = function (callback) {\n\t        var chrome_id = storage.getItem(\"chrome_id\");\n\t        if (chrome_id != null) {\n\t            callback(chrome_id);\n\t        } else {\n\t            var userid = common.getRandomToken();\n\t            chrome.storage.sync.set({ userid: userid }, function () {\n\t                callback(userid);\n\t            });\n\t        }\n\t    };\n\t}();\n\n/***/ }),\n/* 7 */\n/*!*********************************!*\\\n  !*** ./dev/js/popup/message.js ***!\n  \\*********************************/\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t    /**\n\t     * Display messages\n\t     * @param  {String} Message\n\t     * @param  {String} Type of message Error/Success/Warning\n\t     */\n\t    show: function show(msg, type) {\n\t        $(\"#msg\").html(\"<strong>\" + type + \"</strong>: \" + msg).removeClass(\"hide\");\n\t        setTimeout(function () {\n\t            $(\"#msg\").addClass(\"hide\");\n\t        }, 3000);\n\t    }\n\t};\n\n/***/ }),\n/* 8 */\n/*!*******************************!*\\\n  !*** ./dev/js/popup/group.js ***!\n  \\*******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar auth = __webpack_require__(/*! ./auth */ 6);\n\tvar common = __webpack_require__(/*! ../common/common */ 4);\n\tvar request = __webpack_require__(/*! ./request */ 2);\n\tvar message = __webpack_require__(/*! ./message */ 7);\n\tvar storage = __webpack_require__(/*! ./storage */ 1);\n\t\n\tmodule.exports = new function () {\n\t    var _this = this;\n\t\n\t    this.fetchGroups = function () {\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                chrome_id: chrome_id,\n\t                action: \"fetchUserGroups\"\n\t            };\n\t            var data = common.getDataString(params);\n\t            request.get(data, function (data) {\n\t                var defaultGroup = storage.getItem(\"defaultGroup\");\n\t\n\t                var html = \"<option value='0'>Select</option>\";\n\t\n\t                data.forEach(function (item) {\n\t                    var adminText = \"\";\n\t                    var admin = false;\n\t                    if (item.admin === item.uid) {\n\t                        adminText = \"(admin)\";\n\t                        admin = true;\n\t                    }\n\t                    var selected = defaultGroup === item.gid ? \" selected \" : \"\";\n\t                    html += \"<option\\n                                    data-desc=\\\"\" + item.desc + \"\\\"\\n                                    is_public=\\\"\" + item.is_public + \"\\\"\\n                                    group_rights=\\\"\" + item.group_rights + \"\\\"\\n                                    admin-id=\\\"\" + item.admin + \"\\\"\\n                                    name=\\\"\" + item.gname + \"\\\"\\n                                    admin=\\\"\" + admin + \"\\\"\\n                                    \" + selected + \"\\n                                    value=\\\"\" + item.gid + \"\\\"\\n                                >\\n                                    \" + item.gname + \"\\n                                    \" + adminText + \"\\n                                </option>\";\n\t                });\n\t                $(\"#settings #groups-dd,#add-item #groups-dd,#wall #groups-dd\").html(html);\n\t                _this.groupDDChanged();\n\t            });\n\t        });\n\t    };\n\t\n\t    this.createEditGroup = function (e) {\n\t        var mode = $(e.target).data(\"action\");\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var name = $(\"#settings .tab-pane.active #group_name\").val();\n\t            var desc = $(\"#settings .tab-pane.active #group_desc\").val();\n\t            var is_public = $(\"#settings .tab-pane.active #group-visibility .radio:checked\").val();\n\t\n\t            var params = {\n\t                is_public: is_public,\n\t                action: \"createEditGroup\",\n\t                chrome_id: chrome_id,\n\t                desc: desc,\n\t                mode: mode,\n\t                name: name,\n\t                group_rights: $(\"#settings .tab-pane.active #group-rights .radio:checked\").val()\n\t            };\n\t\n\t            if (mode == \"edit\") {\n\t                params.gid = $(\"#settings #groups-dd option:selected\").val();\n\t            }\n\t            //if group is public, find other options\n\t            if (is_public == \"0\") {\n\t                params.password = $(\"#settings .tab-pane.active #group-private #group-password\").val();\n\t            }\n\t\n\t            var data = common.getDataString(params);\n\t\n\t            if (name == \"\") {\n\t                message.show(\"Please enter a groupname. Noob!\", \"Error\");\n\t            } else if (desc == \"\") {\n\t                message.show(\"Please enter a group description!\", \"Error\");\n\t            } else {\n\t                request.post(data, function (data) {\n\t                    if (data.flag) {\n\t                        $(\"#settings .tab-pane.active #group_name\").val(\"\");\n\t                        message.show(data.msg, \"Success\");\n\t                        _this.fetchGroups();\n\t                        $(\"#edit-group-cancel-btn\").click();\n\t                    } else {\n\t                        message.show(data.msg, \"Error\");\n\t                    }\n\t                });\n\t            }\n\t        });\n\t    };\n\t\n\t    this.leaveGroup = function (e) {\n\t        var $handle = $(e.target);\n\t        var group_id = $handle.parents(\"tr\").data(\"gid\");\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                action: \"leaveGroup\",\n\t                chrome_id: chrome_id,\n\t                group_id: group_id\n\t            };\n\t            var data = common.getDataString(params);\n\t            // check if the group exist. If yes, join the group\n\t            request.post(data, function (data) {\n\t                if (data.flag) {\n\t                    $handle.removeClass(\"group-leave red\").addClass(\"group-join green\").html(\"Join\");\n\t                    message.show(data.msg, \"Success\");\n\t                } else {\n\t                    message.show(data.msg, \"Error\");\n\t                }\n\t            });\n\t        });\n\t    };\n\t    this.joinPublicGroup = function (e) {\n\t        var $handle = $(e.target);\n\t        var group_id = $handle.parents(\"tr\").data(\"gid\");\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                action: \"joinPublicGroup\",\n\t                chrome_id: chrome_id,\n\t                group_id: group_id\n\t            };\n\t            var data = common.getDataString(params);\n\t            // check if the group exist. If yes, join the group\n\t            request.post(data, function (data) {\n\t                if (data.flag) {\n\t                    $handle.removeClass(\"group-join green\").addClass(\"group-leave red\").html(\"Leave\");\n\t                    message.show(data.msg, \"Success\");\n\t                } else {\n\t                    message.show(data.msg, \"Error\");\n\t                }\n\t            });\n\t        });\n\t    };\n\t    this.joinPrivateGroup = function () {\n\t        var group_name = $(\"#tab-private-group #group_name\").val();\n\t        var group_password = $(\"#tab-private-group #group_password\").val();\n\t        if (group_name != \"\") {\n\t            auth.getUserId(function (chrome_id) {\n\t                var params = {\n\t                    action: \"joinPrivateGroup\",\n\t                    chrome_id: chrome_id,\n\t                    group_name: group_name,\n\t                    group_password: group_password\n\t                };\n\t                var data = common.getDataString(params);\n\t                // check if the group exist. If yes, join the group\n\t                request.post(data, function (data) {\n\t                    if (data.flag) {\n\t                        $(\"#tab-private-group #group_name, #tab-private-group #group_password\").val(\"\");\n\t                        _this.fetchGroups();\n\t                        message.show(data.msg, \"Success\");\n\t                    } else {\n\t                        message.show(data.msg, \"Error\");\n\t                    }\n\t                });\n\t            });\n\t        } else {\n\t            message.show(\"Enter a groupname. Noob!\", \"Error\");\n\t        }\n\t    };\n\t    this.makeGroupDefault = function (selector) {\n\t        var defaultGroup = $(selector).val();\n\t        if (defaultGroup != \"0\") {\n\t            var name = $(selector).find(\"option:selected\").text();\n\t            storage.setItem(\"defaultGroup\", defaultGroup);\n\t            storage.setItem(\"defaultGroupName\", name);\n\t            message.show(\"Default group set to \" + name, \"Success\");\n\t            $(\"#group-display\").html(storage.getItem(\"defaultGroupName\"));\n\t        } else {\n\t            message.show(\"Select a group\", \"Error\");\n\t        }\n\t    };\n\t\n\t    this.groupDDChanged = function () {\n\t        var group_id = $(\"#settings #groups-dd\").val();\n\t        $(\".editgroup-block\").addClass(\"hide\");\n\t        var isAdmin = $(\"#settings #groups-dd option:selected\").attr(\"admin\");\n\t        var admin_id = $(\"#settings #groups-dd option:selected\").attr(\"admin-id\");\n\t\n\t        if (isAdmin == \"true\") {\n\t            //allow this fellow to edit the group\n\t            $(\"#edit-group\").removeClass(\"hide\");\n\t            $(\"#rename-group-input\").val($(\"#settings #groups-dd option:selected\").attr(\"name\"));\n\t        } else {\n\t            $(\"#edit-group\").addClass(\"hide\");\n\t            $(\"#rename-group-input\").val(\"\");\n\t        }\n\t        $(\"#group-users-block\").addClass(\"hide\");\n\t        $(\"#group-users-table tbody\").html(\"\");\n\t\n\t        if (group_id != \"0\" && isAdmin == \"true\") {\n\t            auth.getUserId(function (chrome_id) {\n\t                var params = {\n\t                    group: group_id,\n\t                    chrome_id: chrome_id,\n\t                    action: \"getGroupUsers\"\n\t                };\n\t                var data = common.getDataString(params);\n\t                request.get(data, function (data) {\n\t                    var html = \"\";\n\t                    data.forEach(function (item, i) {\n\t                        var $html = $(\"#users-template\").clone().find(\"tbody\");\n\t                        var remove = item.id == admin_id ? \"\" : \"remove\";\n\t                        html += $html.html().replace(\"{NICKNAME}\", item.nickname).replace(\"{USER_ID}\", item.id).replace(\"{REMOVE}\", remove).replace(\"{\" + item.group_rights + \"}\", \"checked\").replace(new RegExp(\"{i}\", \"g\"), i);\n\t                    });\n\t                    $(\"#group-users-table tbody\").html(html);\n\t                    $(\"#group-users-block\").removeClass(\"hide\");\n\t                });\n\t            });\n\t        }\n\t    };\n\t\n\t    this.removeUserFromGroup = function (e) {\n\t        var $handle = $(e.target).parents(\".user-item\");\n\t        var user_id = $handle.data(\"id\");\n\t        var group_id = $(\"#settings #groups-dd\").val();\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                user_id: user_id,\n\t                group_id: group_id,\n\t                action: \"removeUserFromGroup\",\n\t                chrome_id: chrome_id\n\t            };\n\t\n\t            var data = common.getDataString(params);\n\t\n\t            request.post(data, function (data) {\n\t                if (data.flag) {\n\t                    $handle.remove();\n\t                    message.show(data.msg, \"Success\");\n\t                } else {\n\t                    message.show(data.msg, \"Error\");\n\t                }\n\t            });\n\t        });\n\t    };\n\t    /**\n\t     * Prints instructions if the default group is not set.\n\t     * This is usually seen if the user is not logged in\n\t     */\n\t    this.groupNotSetMessage = function () {\n\t        if (storage.getItem(\"defaultGroup\") === null) {\n\t            $(\"#wall ul.chat\").html(\"- Login/register to get started<br>- Create a new group or select a group as default<br>- Items from Default group will be displayed here\");\n\t            $(\"#updates ul.chat\").html(\"- Login/register to get started<br>- Updates from Non-Default groups will be displayed here.\");\n\t        }\n\t    };\n\t\n\t    this.getAllPublicGroups = function () {\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                chrome_id: chrome_id,\n\t                action: \"getAllPublicGroups\"\n\t            };\n\t            var data = common.getDataString(params);\n\t\n\t            request.post(data, function (data) {\n\t                var html = \"\";\n\t                data.forEach(function (item) {\n\t                    var status = item.status == \"1\" ? \"<a href='#' class='red group-leave'>Leave</a>\" : \"<a href='#' class='green group-join'>Join</a>\";\n\t                    html += \"<tr data-gid=\" + item.id + \"> \\\n\t                                <td><strong>\" + item.name + \"</strong> <br/>\" + item.desc + \".</td> \\\n\t                                <td>\" + item.group_rights + \"</td> \\\n\t                                <td>\" + item.total + \"</td> \\\n\t                                <td>\" + status + \"</td> \\\n\t                            </tr>\";\n\t                });\n\t\n\t                $(\"#tab-public-group tbody\").html(html);\n\t            });\n\t        });\n\t    };\n\t\n\t    this.editGroup = function (e) {\n\t        $(e.target).addClass(\"hide\");\n\t        $(\".editgroup-block\").removeClass(\"hide\");\n\t        var $markup = $(\"#tab-create-group\").clone(); //editgroup-block\n\t        $markup.find(\"#create-group\").remove();\n\t        $(\"div.editgroup-block #editgroup-wrapper\").html($markup.html()).removeClass(\"hide\");\n\t\n\t        $handle = $(\"#editgroup-wrapper\");\n\t        $option = $(\"#tab-manage-group #groups-dd option:selected\");\n\t\n\t        //update group name\n\t        $handle.find(\"#group_name\").val($option.text().replace(\"(admin)\", \"\").trim());\n\t        //update group desc //saha\n\t        $handle.find(\"#group_desc\").val($option.data(\"desc\"));\n\t        //update private/public visibility\n\t        $(\"#tab-manage-group #group-visibility .radio[value='\" + $option.attr(\"is_public\") + \"']\").attr(\"checked\", \"checked\");\n\t        //update public rights\n\t        console.log($option.attr(\"group_rights\"));\n\t        $(\"#tab-manage-group #group-rights .radio[value='\" + $option.attr(\"group_rights\") + \"']\").attr(\"checked\", \"checked\");\n\t    };\n\t    this._editGroupSave = function () {\n\t        var group_name = $(\"#rename-group-input\").val();\n\t        var group_id = $(\"#settings #groups-dd option:selected\").val();\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            request.post(\"name=\" + group_name + \"&group_id=\" + group_id + \"&chrome_id=\" + chrome_id + \"&action=editGroupSave\", function (data) {\n\t                if (data.flag) {\n\t                    $(\".editgroup-block\").addClass(\"hide\");\n\t                    message.show(data.msg, \"Success\");\n\t                    $(\"#edit-group\").removeClass(\"hide\");\n\t                    $(\"#groups-dd option[value='\" + group_id + \"']\").html(group_name + \"(admin)\");\n\t\n\t                    if (storage.getItem(\"defaultGroup\") == group_id) {\n\t                        storage.setItem(\"defaultGroupName\", group_name + \"(admin)\");\n\t                        $(\"#group-display\").html(group_name + \"(admin)\");\n\t                    }\n\t                } else {\n\t                    //$(\"#edit-group\").removeClass('hide');\n\t                    message.show(data.msg, \"Error\");\n\t                }\n\t            });\n\t        });\n\t    };\n\t}();\n\n/***/ }),\n/* 9 */\n/*!******************************!*\\\n  !*** ./dev/js/popup/user.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar message = __webpack_require__(/*! ./message */ 7);\n\tvar auth = __webpack_require__(/*! ./auth */ 6);\n\tvar storage = __webpack_require__(/*! ./storage */ 1);\n\tvar request = __webpack_require__(/*! ./request */ 2);\n\tvar group = __webpack_require__(/*! ./group */ 8);\n\tvar common = __webpack_require__(/*! ../common/common */ 4);\n\tvar user = new function () {\n\t    this.info = {};\n\t    /**\n\t     * Greets the user\n\t     * @param  {String}\n\t     */\n\t    this.welcomeUser = function (nickname) {\n\t        var logout = '<a href=\"#\" id=\"logout\">Logout</a>';\n\t        var edit = '<a href=\"#\" id=\"edit-uname\">Edit</a>';\n\t        $(\".status\").html(\"Connected as <strong>\" + nickname + \"</strong>, \" + logout);\n\t        $(\"#edit-uname-input\").val(nickname);\n\t        $(\".step1\").hide();\n\t    };\n\t    /**\n\t     * Some post processing after login/registration\n\t     */\n\t    this.afterLogin = function (data) {\n\t        if (data.defaultGroup) {\n\t            storage.setItem(\"defaultGroup\", data.defaultGroup);\n\t            storage.setItem(\"defaultGroupName\", data.defaultGroupName);\n\t            storage.setItem(\"uid\", data.uid);\n\t            $(\"#group-display\").html(data.defaultGroupName);\n\t            group.fetchGroups();\n\t        }\n\t    };\n\t    /**\n\t     * Updates username. But lets not allow user to do this.\n\t     */\n\t    this._updateUsername = function (e) {\n\t        var nickname = $(e.target).val();\n\t        if (name != \"\") {\n\t            auth.getUserId(function (chrome_id) {\n\t                var params = {\n\t                    nickname: nickname,\n\t                    action: \"updateUsername\",\n\t                    chrome_id: chrome_id\n\t                };\n\t\n\t                var data = common.getDataString(params);\n\t                request.get(data, function (data) {\n\t                    if (data.flag) {\n\t                        message.show(data.msg, \"Success\");\n\t                    } else {\n\t                        message.show(data.msg, \"Error\");\n\t                    }\n\t                });\n\t            });\n\t        }\n\t    };\n\t\n\t    this.changePublicRights = function (e) {\n\t        var $handle = $(e.target).parents(\".user-item\");\n\t        var user_id = $handle.data(\"id\");\n\t        var group_id = $(\"#settings #groups-dd\").val();\n\t        var group_rights = $(e.target).val();\n\t\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                user_id: user_id,\n\t                group_id: group_id,\n\t                action: \"changePublicRights\",\n\t                chrome_id: chrome_id,\n\t                group_rights: group_rights\n\t            };\n\t\n\t            var data = common.getDataString(params);\n\t\n\t            request.post(data, function (data) {\n\t                if (data.flag) {\n\t                    message.show(data.msg, \"Success\");\n\t                } else {\n\t                    message.show(data.msg, \"Error\");\n\t                }\n\t            });\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Check if the user exist.\n\t     * @param  {Function} Callback function\n\t     */\n\t    this.userExist = function (callback) {\n\t        var data = { flag: 0 };\n\t        if (storage.getItem(\"loggedIn\") === null) {\n\t            callback(data);\n\t        } else {\n\t            //get the userid and check in the server\n\t            auth.getUserId(function (chrome_id) {\n\t                var params = {\n\t                    chrome_id: chrome_id,\n\t                    action: \"fetchUserInfo\"\n\t                };\n\t\n\t                var data = common.getDataString(params);\n\t\n\t                request.get(data, function (response) {\n\t                    callback(response);\n\t                });\n\t            });\n\t        }\n\t    };\n\t}();\n\t\n\tmodule.exports = user;\n\n/***/ }),\n/* 10 */\n/*!**********************************!*\\\n  !*** ./dev/js/popup/comments.js ***!\n  \\**********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar auth = __webpack_require__(/*! ./auth */ 6);\n\tvar request = __webpack_require__(/*! ./request */ 2);\n\tvar user = __webpack_require__(/*! ./user */ 9);\n\tvar common = __webpack_require__(/*! ../common/common */ 4);\n\t\n\tmodule.exports = new function () {\n\t    var _this = this;\n\t\n\t    this.commentsPage = 1;\n\t    this.totalCommentsPages = 0;\n\t\n\t    this.sendComment = function (e) {\n\t        var $handle = $(e.target).parents(\".item\");\n\t        var $comments = $handle.find(\".comments-section .comments\");\n\t        var item_id = $handle.data(\"id\");\n\t        var comment = $handle.find(\".comment-input\").val().trim();\n\t\n\t        if (e.keyCode == 13 && comment.length > 0) {\n\t            $handle.find(\".comment-input\").val(\"\");\n\t            auth.getUserId(function (chrome_id) {\n\t                var params = {\n\t                    item_id: item_id,\n\t                    comment: comment,\n\t                    chrome_id: chrome_id,\n\t                    action: \"insertComment\"\n\t                };\n\t                request.post(common.getDataString(params), function (data) {\n\t                    if (data.flag == 1) {\n\t                        var $html = $(\"#comment-template\").clone();\n\t                        var item = $html.html().replace(\"{COMMENT_ID}\", data.id).replace(\"{USER_NAME}\", user.info.nickname).replace(\"{USER_COMMENT}\", common.escape(comment)).replace(\"{COLOR}\", user.info.color).replace(\"{COMMENT_DATE}\", \"now\");\n\t                        $comments.prepend(item);\n\t                    }\n\t                });\n\t            });\n\t        }\n\t    };\n\t\n\t    this.showComments = function (e) {\n\t        var $handle = $(e.target).parents(\".item\");\n\t        var item_id = $handle.data(\"id\");\n\t        var $comments = $handle.find(\".comments-section .comments\");\n\t        $comments.parent().toggleClass(\"hide\");\n\t\n\t        $comments.html(\"loading...\");\n\t        _this.fetchComments($comments, \"html\", null, item_id);\n\t    };\n\t\n\t    this.fetchComments = function ($handle, updateType, count, item_id, callback) {\n\t        auth.getUserId(function (chrome_id) {\n\t            var params = {\n\t                commentsPage: _this.commentsPage,\n\t                item_id: item_id,\n\t                chrome_id: chrome_id,\n\t                action: \"commentsItem\"\n\t            };\n\t            var data = common.getDataString(params);\n\t            request.get(data, function (data) {\n\t                _this.totalCommentsPages = data.total;\n\t                var html = \"\";\n\t                if (data.rows.length > 0) {\n\t                    data.rows.forEach(function (item) {\n\t                        var $html = $(\"#comment-template\").clone();\n\t\n\t                        var item = $html.html().replace(\"{COMMENT_ID}\", item.id).replace(\"{USER_NAME}\", item.nickname).replace(\"{USER_COMMENT}\", common.escape(item.comment)).replace(\"{COLOR}\", item.color).replace(\"{COMMENT_DATE}\", moment(item.created_at).add(moment().utcOffset(), \"minutes\").fromNow());\n\t                        html += item;\n\t                    });\n\t                }\n\t                if (updateType === \"html\") {\n\t                    $handle.html(html);\n\t                } else if (updateType === \"append\") {\n\t                    $handle.append(html);\n\t                } else if (updateType === \"prepend\") {\n\t                    $handle.prepend(html);\n\t                }\n\t                if (typeof callback === \"function\") {\n\t                    callback(html);\n\t                }\n\t            });\n\t        });\n\t    };\n\t}();\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.entry.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 08feca5a9092b6f623f4","/* ========================================================================\n * @title - Share news, articles and music with your friends\n * @author - Abhishek Saha\n * @description - This is the main engine that takes care of everything\n * ======================================================================== */\nconst storage = require(\"./popup/storage\");\nconst request = require(\"./popup/request\");\nconst common = require(\"./common/common\");\nconst item = require(\"./popup/item\");\nconst group = require(\"./popup/group\");\nconst user = require(\"./popup/user\");\nconst auth = require(\"./popup/auth\");\nconst comments = require(\"./popup/comments\");\n\nvar plugin = () => {\n    /**\n     * Private object containing the whole al =>ity of the plugin\n     * @type {object}\n     */\n    var main = {\n        /**\n         * Holds the background page link\n         * @type {String}\n         */\n        bgPage: null,\n\n        /**\n         * Future purpose\n         * @type {Number}\n         */\n        edit: 0,\n\n        /**\n         * Timer to ping the background page for notifications\n         * @type {Number}\n         */\n        noticationIntervalTimer: 0,\n\n        /**\n         * Start the engine\n         * @return {null}\n         */\n        init: () => {\n            main.bgPage = chrome.extension.getBackgroundPage();\n            main._addEventListeners();\n            var manifest = chrome.runtime.getManifest();\n            var version = manifest.version;\n            $(\".version\").html(version);\n            main.setTheme();\n\n            user.userExist(result => {\n                if (!result.flag) {\n                    /* If user does not exist or not logged in show settings tab */\n                    $('a[data-target=\"#settings\"]').click();\n                    $(\"#loader\").remove();\n\n                    /*The wall and update tab should show a message asking the user what to do*/\n                    group.groupNotSetMessage();\n                } else {\n                    main._detectSite();\n\n                    user.info = result.data;\n\n                    item.fetchItems(\"#wall\", \"html\", null);\n\n                    group.fetchGroups();\n                    main._activateScroll();\n                    main._resetNotification();\n\n                    /* If the user is logged in, show a welcome message */\n                    user.welcomeUser(result.data.nickname);\n\n                    /* Show which group the user is connected to */\n                    $(\"#group-display\").html(\n                        storage.getItem(\"defaultGroupName\")\n                    );\n\n                    /* Show notifications */\n                    main._updateNotificationCount();\n                    main.noticationIntervalTimer = setInterval(\n                        main._updateNotificationCount,\n                        2000\n                    );\n                }\n            });\n        },\n        /**\n         * Event listeners\n         */\n        _addEventListeners: () => {\n            var self = main;\n\n            $(\"button.register-btn\").click(self.registerUser);\n            $(\"button.login-btn\").click(self.loginUser);\n\n            $(\"#tab-create-group #create-group\").click(group.createEditGroup);\n            $(\"#edit-group-save-btn\").click(group.createEditGroup);\n            $(\"#join-group\").click(group.joinPrivateGroup);\n\n            $(\"#add-item button\").click(item.addItem);\n            $(\"#default-group\").click(() => {\n                group.makeGroupDefault(\"#settings #groups-dd\");\n            });\n            $(document).on(\"click\", \".favourite\", item.makeFavourite);\n            $(document).on(\"click\", \".delete-item\", item.deleteItem);\n            $(document).on(\"click\", \".comments-item\", comments.showComments);\n            $(document).on(\"click\", \".item-link\", item.itemClicked);\n            $(document).on(\"click\", \".forward-item\", item.itemForward);\n            $(\"#settings #groups-dd\").on(\"change\", group.groupDDChanged);\n\n            $(document).on(\n                \"keyup\",\n                \".comment-input\",\n                comments.sendComment.bind(this)\n            );\n\n            $(\"#wall #groups-dd\").on(\"change\", () => {\n                group.makeGroupDefault(\"#wall #groups-dd\");\n                item.fetchItems(\"#wall\", \"html\", null);\n            });\n\n            $('a[data-toggle=\"tab\"]').on(\"shown.bs.tab\", self._tabChanged);\n\n            $(\"#edit-group\").click(group.editGroup);\n            $(\"#edit-group-cancel-btn\").click(() => {\n                $(\"#edit-group\").removeClass(\"hide\");\n                $(\".editgroup-block\").addClass(\"hide\");\n            });\n            $(\"#settings\").on(\"click\", \"#logout\", self._logout);\n            $(document).on(\"click\", \"#group-visibility .radio\", e => {\n                var visibility = $(e.target).val();\n                if (visibility == \"0\") {\n                    $(\".tab-pane.active #group-private\").removeClass(\"hide\");\n                } else {\n                    $(\".tab-pane.active #group-private\").addClass(\"hide\");\n                }\n            });\n            $(\"#tab-manage-group\").on(\n                \"click\",\n                \".remove-user\",\n                group.removeUserFromGroup\n            );\n            $(\"#tab-manage-group\").on(\n                \"click\",\n                \".user-item .radio\",\n                user.changePublicRights\n            );\n\n            $(\"#tab-public-group\").on(\n                \"click\",\n                \".group-join\",\n                group.joinPublicGroup\n            );\n            $(\"#tab-public-group\").on(\n                \"click\",\n                \".group-leave\",\n                group.leaveGroup\n            );\n            $(\"#tab-customize #sound-setting .radio\").click(e => {\n                storage.setItem(\"sound\", $(e.target).val());\n            });\n            $(\"#tab-customize #theme-setting .radio\").click(e => {\n                storage.setItem(\"theme\", $(e.target).val());\n                self.setTheme();\n            });\n            $(\"#tab-customize #rich-notification .radio\").click(e => {\n                storage.setItem(\"richNotification\", $(e.target).val());\n            });\n            $(\"#tab-customize #sound-setting .radio\").click(e => {\n                storage.setItem(\"sound\", $(e.target).val());\n            });\n            /**\n             * Not allowing user to update username.\n             * Maybe a future release\n             */\n            // $(\"#settings\").on('click','#edit-uname', () =>{\n            //     $(\"#edit-name-block\").removeClass('hide');\n            // })\n\n            // $(\"#update-uname-btn\").click(self._updateUsername);\n        },\n        setTheme: () => {\n            var theme = storage.getItem(\"theme\");\n            if (theme != null) {\n                $(\"#theme\").attr(\"href\", \"css/bs.\" + theme + \".css\");\n                $(\"body\").removeAttr(\"class\").addClass(theme);\n            }\n        },\n        /**\n         * Logout a user\n         */\n        _logout: () => {\n            //Remove all information from the local store.\n            storage.clearAll();\n            storage.setItem(\"loggedOut\", true);\n            $(\".status\").html(\"\");\n            $(\".step1\").show();\n            $(\"#groups-dd\").html(\"<option value='0'>Select</option>\");\n            $(\"#group-display\").html(\"\");\n        },\n        /**\n         * Triggers when a tab is changed\n         * @param  {event}\n         */\n        _tabChanged: e => {\n            e.preventDefault();\n            var target = $(e.target).data(\"target\"); // activated tab\n            item.page = 1;\n\n            $(\"ul.chat\").html('<div id=\"loader\" class=\"cssload-aim\"></div>');\n\n            user.userExist(result => {\n                if (!result.flag) {\n                    group.groupNotSetMessage();\n                } else {\n                    const targets = [\n                        \"#wall\",\n                        \"#updates\",\n                        \"#comments\",\n                        \"#user-links\",\n                        \"#favourites\"\n                    ];\n\n                    if (targets.indexOf(target) !== -1) {\n                        item.fetchItems(target, \"html\", null);\n                    } else if (target === \"#about\") {\n                        main._getRandomQuote();\n                    } else if (target === \"#settings\") {\n                        group.fetchGroups();\n                        var theme = storage.getItem(\"theme\");\n                        var sound = storage.getItem(\"sound\");\n                        var richNotification = storage.getItem(\n                            \"richNotification\"\n                        );\n                        if (theme !== null) {\n                            $(\n                                \"#tab-customize #theme-setting .radio[value='\" +\n                                    theme +\n                                    \"']\"\n                            ).attr(\"checked\", \"checked\");\n                        }\n                        if (richNotification !== null) {\n                            $(\n                                \"#tab-customize #rich-notification .radio[value='\" +\n                                    richNotification +\n                                    \"']\"\n                            ).attr(\"checked\", \"checked\");\n                        }\n                        if (sound !== null) {\n                            $(\n                                \"#tab-customize #sound-setting .radio[value='\" +\n                                    sound +\n                                    \"']\"\n                            ).attr(\"checked\", \"checked\");\n                        }\n                    } else if (target === \"#add-item\") {\n                        group.fetchGroups();\n                    } else if (target === \"#tab-public-group\") {\n                        group.getAllPublicGroups();\n                    } else if (target === \"#tab-join-public-group\") {\n                        group.getAllPublicGroups();\n                    }\n                }\n            });\n        },\n\n        /**\n         * Detects if the active chrome tab is youtube or soudcloud\n         */\n        _detectSite: () => {\n            chrome.tabs.query({ currentWindow: true, active: true }, function(\n                tabs\n            ) {\n                //var url = tabs[0].url;\n\n                var payload = { action: \"get-meta\" };\n\n                main.bgPage.retrieveSiteMeta(payload, data => {\n                    if (data && data.url) {\n                        $(\"#item-name\").val(data.title);\n                        $(\"#item-url\").val(data.url);\n                        $(\"#item-thumb\").val(data.thumbUrl);\n                    }\n                });\n            });\n        },\n        /**\n         * Reset the extension notification count to 0\n         */\n        _resetNotification: () => {\n            auth.getUserId(chrome_id => {\n                var group = storage.getItem(\"defaultGroup\");\n\n                if (group !== null) {\n                    var params = {\n                        group: group,\n                        chrome_id: chrome_id,\n                        action: \"resetNotification\"\n                    };\n                    var data = common.getDataString(params);\n                    request.get(data);\n                    main.bgPage.updateNotification(0);\n                }\n            });\n        },\n        /**\n         * Update the notification count of the tabs\n         */\n        _updateNotificationCount: () => {\n            main.bgPage.getNotificationCount(data => {\n                if (parseInt(data.wallCount) > 0) {\n                    $(\"#wall-count\").text(\"(\" + data.wallCount + \")\");\n                    item.fetchItems(\"#wall\", \"prepend\", data.wallCount, null);\n                    main._resetNotification();\n                }\n                if (parseInt(data.updateCount) > 0) {\n                    $(\"#update-count\").text(\"(\" + data.updateCount + \")\");\n                    item.fetchItems(\n                        \"#updates\",\n                        \"prepend\",\n                        data.updateCount,\n                        null\n                    );\n                    main._resetNotification();\n                }\n                if (parseInt(data.commentCount) > 0) {\n                    $(\"#comment-count\").text(\"(\" + data.commentCount + \")\");\n                    item.fetchItems(\n                        \"#updates\",\n                        \"prepend\",\n                        data.commentCount,\n                        null\n                    );\n                    main._resetNotification();\n                }\n            });\n        },\n\n        _activateScroll: () => {\n            var $panels = $(\n                \"#wall .panel-body, #updates .panel-body, #favourites .panel-body, #user-links .panel-body\"\n            );\n\n            $panels.scroll(e => {\n                var height = $(e.target).innerHeight();\n                var scroll_top = $(e.target).scrollTop();\n                var scrollHeight = $(e.target)[0].scrollHeight;\n\n                var loading = true;\n                var handle = $(\"#myTab .active a\").data(\"target\");\n                if (scroll_top + height == scrollHeight && loading === true) {\n                    item.page++;\n                    if (item.page <= item.totalPages) {\n                        item.fetchItems(handle, \"append\", null, html => {\n                            loading = false;\n                        });\n                    }\n                }\n                e.stopPropagation();\n                e.preventDefault();\n                return false;\n            });\n        },\n\n        /**\n         * Register a new user.\n         */\n        registerUser: () => {\n            auth.getUserId(chrome_id => {\n                var params = {\n                    chrome_id: chrome_id,\n                    nickname: $(\"#nickname\").val(),\n                    password: $(\"#password\").val(),\n                    action: \"registerUser\"\n                };\n                auth.register(params, data => {\n                    user.welcomeUser(params.nickname);\n                    user.afterLogin(data);\n                    main.bgPage.updateVersion();\n                });\n            });\n        },\n        /**\n         * Login\n         */\n        loginUser: () => {\n            auth.getUserId(chrome_id => {\n                var params = {\n                    chrome_id: chrome_id,\n                    nickname: $(\"#nickname\").val(),\n                    password: $(\"#password\").val(),\n                    action: \"loginUser\"\n                };\n                auth.login(params, data => {\n                    user.welcomeUser(params.nickname);\n                    user.afterLogin(data);\n                    main.bgPage.updateVersion();\n                });\n            });\n        },\n        _getRandomQuote: () => {\n            var params = {\n                action: \"getQuote\"\n            };\n            var data = common.getDataString(params);\n            request.get(data, response => {\n                $(\"#random_quote\").html(\n                    `<p class='ext-center'>${response.quote}<br/>&dash; ${response.author} &dash;</p>`\n                );\n            });\n        }\n    };\n\n    return {\n        init: main.init\n    };\n};\n\n/**\n * Start the plugin\n */\nvar instance = plugin();\n$(document).ready(instance.init);\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup.js","module.exports = new function() {\n    this.getItem = name => {\n        return localStorage.getItem(name);\n    };\n\n    this.setItem = (name, value) => {\n        localStorage.setItem(name, value);\n    };\n\n    this.removeItem = name => {\n        localStorage.removeItem(name);\n    };\n\n    this.clearAll = () => {\n        localStorage.clear();\n    };\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/storage.js","const storage = require(\"./storage\");\nconst config = require(\"../../../config\");\ndebugger;\nconst request = new function() {\n    this._sendRequest = (type, data, callback) => {\n        $.ajax({\n            url: config.getEndpoint(),\n            type: type,\n            data: data,\n            timeout: 4000,\n            dataType: \"json\",\n            success: callback,\n            error: function(jXHR) {\n                if (jXHR.status != 200) {\n                    $(\".chat\").html(\n                        \"Hey \" +\n                            storage.getItem(\"nickname\") +\n                            \", wait, server is busy :( Please try after sometime!\"\n                    );\n                }\n            }\n        });\n    };\n\n    this.post = (data, callback) => {\n        this._sendRequest(\"POST\", data, callback);\n    };\n\n    this.get = (data, callback) => {\n        this._sendRequest(\"GET\", data, callback);\n    };\n}();\nmodule.exports = request;\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/request.js","module.exports = new function() {\n    this.devmode = true;\n\n    this.dev_url = \"http://localhost:8000\";\n    this.prod_url =\n        \"http://playground.ajaxtown.com/youtube_chrome_backend/index.php\";\n\n    this.getEndpoint = () => {\n        console.log(this.dev_url);\n        return this.devmode ? this.dev_url : this.prod_url;\n    };\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./config.js","module.exports = new function() {\n    this.basePropertyOf = object => {\n        return function(key) {\n            return object == null ? undefined : object[key];\n        };\n    };\n\n    this.escape = str => {\n        /** Used to map characters to HTML entities. */\n        const htmlEscapes = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#39;\"\n        };\n\n        let escapeHtmlChar = this.basePropertyOf(htmlEscapes);\n        let reUnescapedHtml = /[&<>\"']/g;\n        return str.replace(reUnescapedHtml, escapeHtmlChar);\n    };\n\n    this.unescape = str => {\n        /** Used to map HTML entities to characters. */\n        const htmlUnescapes = {\n            \"&amp;\": \"&\",\n            \"&lt;\": \"<\",\n            \"&gt;\": \">\",\n            \"&quot;\": '\"',\n            \"&#39;\": \"'\"\n        };\n        let unescapeHtmlChar = this.basePropertyOf(htmlUnescapes);\n        let reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;\n        return str.replace(reEscapedHtml, unescapeHtmlChar);\n    };\n\n    /**\n     * Generates a hash\n     * @return {String}\n     */\n    this.getRandomToken = () => {\n        // E.g. 8 * 32 = 256 bits token\n        var randomPool = new Uint8Array(32);\n        crypto.getRandomValues(randomPool);\n        var hex = \"\";\n        for (var i = 0; i < randomPool.length; ++i) {\n            hex += randomPool[i].toString(16);\n        }\n        // E.g. db18458e2782b2b77e36769c569e263a53885a9944dd0a861e5064eac16f1a\n        return hex;\n    };\n    this.getDataString = params => {\n        var str = \"1=1\";\n        for (var key in params) {\n            str += \"&\" + key + \"=\" + params[key];\n        }\n        return str;\n    };\n    this.lazyLoadImages = handle => {\n        handle.each(function() {\n            var $img = $(this);\n            $.ajax({\n                url: $img.data(\"src\"),\n                type: \"HEAD\",\n                timeout: 1200,\n                success: function() {\n                    $img\n                        .hide()\n                        .attr(\"src\", $img.data(\"src\"))\n                        .fadeIn(1000)\n                        .removeClass(\"lazy\")\n                        .removeAttr(\"data-src\");\n                }\n            });\n        });\n    };\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/common/common.js","const request = require(\"./request\");\nconst storage = require(\"./storage\");\nconst auth = require(\"./auth\");\nconst common = require(\"../common/common\");\nconst message = require(\"./message\");\n\nmodule.exports = new function() {\n    /**\n     * Holds the current page number\n     * @type {Number}\n     */\n    this.page = 1;\n\n    /**\n     * Total number of pages available\n     * @type {Number}\n     */\n    this.totalPages = 0;\n\n    /**\n     * Fetch items from the server\n     * @param  {Int} Current Page\n     * @param  {String} Determines active tab\n     * @param  {Function} Callback function\n     * @param  {String} Determines if the items needs to be appended or prepended or pasted\n     * @param  {Number} Total items to fetch\n     */\n    this.fetchItems = (handle, updateType, count, callback) => {\n        var group = storage.getItem(\"defaultGroup\");\n        if (group) {\n            auth.getUserId(chrome_id => {\n                var uid = storage.getItem(\"uid\");\n                const params = {\n                    count: count,\n                    handle: handle.replace(\"#\", \"\"),\n                    page: this.page,\n                    chrome_id: chrome_id,\n                    group: group,\n                    action: \"readTracks\"\n                };\n                let data = common.getDataString(params);\n                request.get(data, data => {\n                    $(\"#loader\").remove();\n                    var existingItemsCount = $(handle + \" .item\").length;\n                    var html = \"\";\n\n                    this.totalPages = data.pages;\n\n                    if (data.rows.length === 0) {\n                        html = \"Nothing found.\";\n                    }\n\n                    data.rows.forEach((item, idx) => {\n                        let $html = $(\"#item-template\").clone();\n\n                        let comments =\n                            item.comments === null ? \"\" : item.comments;\n\n                        let thumbnail = item.thumbnail;\n\n                        if (item.thumbnail == \"\" || item.thumbnail == null) {\n                            thumbnail = \"assets/weed.jpg\";\n                        }\n\n                        var gname = handle == \"#wall\" ? \"\" : `[${item.name}]`;\n\n                        var favourite =\n                            item.favourite == \"1\"\n                                ? \"glyphicon-star\"\n                                : \"glyphicon-star-empty\";\n\n                        var deleteBtn = item.uid == uid ? \"Delete\" : \"\";\n\n                        var item = $html\n                            .html()\n                            .replace(\"{NICKNAME}\", common.escape(item.nickname))\n                            .replace(\"{SRNO}\", ++existingItemsCount)\n                            .replace(\"{STAR}\", favourite)\n                            .replace(\"{THUMB}\", thumbnail)\n                            .replace(\"{ITEM_ID}\", item.id)\n                            .replace(\"{USER_ID}\", item.uid)\n                            .replace(\"{TITLE}\", common.escape(item.title))\n                            .replace(\"{URL}\", common.escape(item.url))\n                            .replace(\"{COMMENTS}\", comments)\n                            .replace(\"{GROUP_NAME}\", common.escape(gname))\n                            .replace(\"{GROUP_ID}\", gname)\n                            .replace(\"{DELETE}\", deleteBtn)\n                            .replace(\"{COMMENTS_COUNT}\", item.comments_count)\n                            //.replace(\"{COLOR}\", item.color)\n                            .replace(\"{TIMES_CLICKED}\", item.times_clicked)\n                            .replace(\n                                \"{CREATED_AT}\",\n                                moment(item.created_at)\n                                    .add(moment().utcOffset(), \"minutes\")\n                                    .fromNow()\n                            );\n                        html += item;\n                    });\n\n                    if (updateType === \"append\") {\n                        $(handle + \" ul.chat\").append(html);\n                    } else if (updateType === \"prepend\") {\n                        $(handle + \" ul.chat\").prepend(html);\n                    } else if (updateType === \"html\") {\n                        $(handle + \" ul.chat\").html(html);\n                    }\n                    common.lazyLoadImages($(handle + \" ul.chat .lazy\"));\n\n                    if (typeof callback === \"function\") {\n                        callback(html);\n                    }\n                });\n            });\n        }\n    };\n    /**\n     * Publish a new Item\n     */\n    this.addItem = () => {\n        var title = $(\"#item-name\").val();\n        var url = $(\"#item-url\").val();\n        var thumbnail = $(\"#item-thumb\").val();\n        var comments = $(\"#item-comments\").val();\n        var group = $(\"#add-item #groups-dd\").val();\n        var defaultGroup = storage.getItem(\"defaultGroup\");\n        var flag = 1;\n\n        //Validations\n        if (url == \"\") {\n            message.show(\"Enter a valid URL\", \"Error\");\n            flag = 0;\n        }\n\n        if (flag === 1 && title == \"\") {\n            message.show(\"Enter a Title\", \"Error\");\n            flag = 0;\n        }\n\n        if (flag === 1) {\n            if (group && group != \"0\") {\n                auth.getUserId(function(chrome_id) {\n                    var params = {\n                        thumbnail: thumbnail,\n                        comments: comments,\n                        title: title,\n                        url: url,\n                        group: group,\n                        chrome_id: chrome_id,\n                        action: \"insertTrack\"\n                    };\n                    var data = common.getDataString(params);\n\n                    request.post(data, function(data) {\n                        if (data.flag) {\n                            if (group == defaultGroup) {\n                                $('a[data-target=\"#wall\"]').click();\n                            } else {\n                                $('a[data-target=\"#updates\"]').click();\n                            }\n                            $(\"#add-item input\").val(\"\");\n                        } else {\n                            message.show(data.msg, \"Sorry\");\n                        }\n                    });\n                });\n            } else {\n                message.show(\n                    \"Select a group as default from Settings\",\n                    \"Error\"\n                );\n            }\n        }\n    };\n\n    this.itemClicked = e => {\n        $handle = $(e.target).parents(\".item\");\n        var item_id = $handle.data(\"id\");\n\n        auth.getUserId(function(chrome_id) {\n            var params = {\n                chrome_id: chrome_id,\n                action: \"itemClicked\",\n                item_id: item_id\n            };\n            var data = main.getDataString(params);\n            main.bgPage.sendClickedStat(data);\n            // request.post(data, function(){\n\n            // });\n        });\n    };\n\n    this.itemForward = e => {\n        var $handle = $(e.target).parents(\".item\");\n        var url = $handle.find(\".item-link\").attr(\"href\");\n        var title = $handle.find(\".item-link\").text();\n\n        $('a[data-target=\"#add-item\"]').click();\n        $(\"#add-item #item-name\").val(title);\n        $(\"#add-item #item-url\").val(url);\n    };\n\n    this.deleteItem = e => {\n        var $handle = $(e.target).parents(\".item\");\n        var item_id = $handle.data(\"id\");\n\n        auth.getUserId(chrome_id => {\n            var params = {\n                item_id: item_id,\n                chrome_id: chrome_id,\n                action: \"deleteItem\"\n            };\n            var data = common.getDataString(params);\n            request.post(data, data => {\n                if (data.flag) {\n                    $handle.remove();\n                } else {\n                }\n            });\n        });\n    };\n    /**\n     * Make the item your favourite\n     */\n    this.makeFavourite = e => {\n        var $handle = $(e.target);\n        var item_id = $handle.parents(\".item\").data(\"id\");\n\n        auth.getUserId(function(chrome_id) {\n            var action = \"addToFavourite\";\n            var newClass = \"glyphicon-star\";\n\n            if ($handle.hasClass(\"glyphicon-star\")) {\n                action = \"removeFromFavourite\";\n                newClass = \"glyphicon-star-empty\";\n            }\n            var params = {\n                chrome_id: chrome_id,\n                item_id: item_id,\n                action: action\n            };\n            var data = common.getDataString(params);\n            request.post(data, data => {\n                $('.item[data-id=\"' + item_id + '\"] .favourite')\n                    .removeClass(\"glyphicon-star glyphicon-star-empty\")\n                    .addClass(newClass);\n            });\n        });\n    };\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/item.js","const request = require(\"./request\");\nconst storage = require(\"./storage\");\nconst message = require(\"./message\");\nconst common = require(\"../common/common\");\n\nmodule.exports = new function() {\n    this.login = (params, callback) => {\n        if (params.nickname.length > 0 && params.password.length > 0) {\n            let data = common.getDataString(params);\n            request.post(data, data => {\n                if (data.flag) {\n                    //store some basic information in the localStorage\n                    storage.setItem(\"nickname\", params.nickname);\n                    storage.setItem(\"loggedIn\", true);\n                    storage.setItem(\"chrome_id\", data.chrome_id);\n                    chrome.storage.sync.set({ userid: data.chrome_id });\n\n                    if (typeof callback === \"function\") {\n                        callback(data);\n                    }\n                } else {\n                    message.show(data.msg, \"Error\");\n                }\n            });\n        }\n    };\n\n    // handle registration\n    this.register = (params, callback) => {\n        if (params.nickname.length > 0 && params.password.length > 0) {\n            let data = common.getDataString(params);\n\n            request.post(data, data => {\n                if (data.flag) {\n                    storage.setItem(\"nickname\", params.nickname);\n                    storage.setItem(\"loggedIn\", true);\n                    storage.setItem(\"chrome_id\", data.chrome_id);\n\n                    if (typeof callback === \"function\") {\n                        callback(data);\n                    }\n                } else {\n                    message.show(data.msg, \"Error\");\n                }\n            });\n        }\n    };\n    /**\n     * Checks if the user id exist. If not, it assigns a new user id\n     * @param  {Function} Callback function\n     */\n    this.getUserId = callback => {\n        var chrome_id = storage.getItem(\"chrome_id\");\n        if (chrome_id != null) {\n            callback(chrome_id);\n        } else {\n            let userid = common.getRandomToken();\n            chrome.storage.sync.set({ userid: userid }, function() {\n                callback(userid);\n            });\n        }\n    };\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/auth.js","module.exports = {\n    /**\n     * Display messages\n     * @param  {String} Message\n     * @param  {String} Type of message Error/Success/Warning\n     */\n    show: (msg, type) => {\n        $(\"#msg\").html(`<strong>${type}</strong>: ${msg}`).removeClass(\"hide\");\n        setTimeout(function() {\n            $(\"#msg\").addClass(\"hide\");\n        }, 3000);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/message.js","var auth = require(\"./auth\");\nvar common = require(\"../common/common\");\nvar request = require(\"./request\");\nvar message = require(\"./message\");\nvar storage = require(\"./storage\");\n\nmodule.exports = new function() {\n    this.fetchGroups = () => {\n        auth.getUserId(chrome_id => {\n            let params = {\n                chrome_id: chrome_id,\n                action: \"fetchUserGroups\"\n            };\n            var data = common.getDataString(params);\n            request.get(data, data => {\n                var defaultGroup = storage.getItem(\"defaultGroup\");\n\n                var html = \"<option value='0'>Select</option>\";\n\n                data.forEach(item => {\n                    var adminText = \"\";\n                    var admin = false;\n                    if (item.admin === item.uid) {\n                        adminText = \"(admin)\";\n                        admin = true;\n                    }\n                    var selected =\n                        defaultGroup === item.gid ? \" selected \" : \"\";\n                    html += `<option\n                                    data-desc=\"${item.desc}\"\n                                    is_public=\"${item.is_public}\"\n                                    group_rights=\"${item.group_rights}\"\n                                    admin-id=\"${item.admin}\"\n                                    name=\"${item.gname}\"\n                                    admin=\"${admin}\"\n                                    ${selected}\n                                    value=\"${item.gid}\"\n                                >\n                                    ${item.gname}\n                                    ${adminText}\n                                </option>`;\n                });\n                $(\n                    \"#settings #groups-dd,#add-item #groups-dd,#wall #groups-dd\"\n                ).html(html);\n                this.groupDDChanged();\n            });\n        });\n    };\n\n    this.createEditGroup = e => {\n        var mode = $(e.target).data(\"action\");\n\n        auth.getUserId(chrome_id => {\n            var name = $(\"#settings .tab-pane.active #group_name\").val();\n            var desc = $(\"#settings .tab-pane.active #group_desc\").val();\n            var is_public = $(\n                \"#settings .tab-pane.active #group-visibility .radio:checked\"\n            ).val();\n\n            var params = {\n                is_public: is_public,\n                action: \"createEditGroup\",\n                chrome_id: chrome_id,\n                desc: desc,\n                mode: mode,\n                name: name,\n                group_rights: $(\n                    \"#settings .tab-pane.active #group-rights .radio:checked\"\n                ).val()\n            };\n\n            if (mode == \"edit\") {\n                params.gid = $(\"#settings #groups-dd option:selected\").val();\n            }\n            //if group is public, find other options\n            if (is_public == \"0\") {\n                params.password = $(\n                    \"#settings .tab-pane.active #group-private #group-password\"\n                ).val();\n            }\n\n            var data = common.getDataString(params);\n\n            if (name == \"\") {\n                message.show(\"Please enter a groupname. Noob!\", \"Error\");\n            } else if (desc == \"\") {\n                message.show(\"Please enter a group description!\", \"Error\");\n            } else {\n                request.post(data, data => {\n                    if (data.flag) {\n                        $(\"#settings .tab-pane.active #group_name\").val(\"\");\n                        message.show(data.msg, \"Success\");\n                        this.fetchGroups();\n                        $(\"#edit-group-cancel-btn\").click();\n                    } else {\n                        message.show(data.msg, \"Error\");\n                    }\n                });\n            }\n        });\n    };\n\n    this.leaveGroup = e => {\n        var $handle = $(e.target);\n        var group_id = $handle.parents(\"tr\").data(\"gid\");\n\n        auth.getUserId(chrome_id => {\n            var params = {\n                action: \"leaveGroup\",\n                chrome_id: chrome_id,\n                group_id: group_id\n            };\n            var data = common.getDataString(params);\n            // check if the group exist. If yes, join the group\n            request.post(data, data => {\n                if (data.flag) {\n                    $handle\n                        .removeClass(\"group-leave red\")\n                        .addClass(\"group-join green\")\n                        .html(\"Join\");\n                    message.show(data.msg, \"Success\");\n                } else {\n                    message.show(data.msg, \"Error\");\n                }\n            });\n        });\n    };\n    this.joinPublicGroup = e => {\n        var $handle = $(e.target);\n        var group_id = $handle.parents(\"tr\").data(\"gid\");\n\n        auth.getUserId(chrome_id => {\n            var params = {\n                action: \"joinPublicGroup\",\n                chrome_id: chrome_id,\n                group_id: group_id\n            };\n            var data = common.getDataString(params);\n            // check if the group exist. If yes, join the group\n            request.post(data, data => {\n                if (data.flag) {\n                    $handle\n                        .removeClass(\"group-join green\")\n                        .addClass(\"group-leave red\")\n                        .html(\"Leave\");\n                    message.show(data.msg, \"Success\");\n                } else {\n                    message.show(data.msg, \"Error\");\n                }\n            });\n        });\n    };\n    this.joinPrivateGroup = () => {\n        var group_name = $(\"#tab-private-group #group_name\").val();\n        var group_password = $(\"#tab-private-group #group_password\").val();\n        if (group_name != \"\") {\n            auth.getUserId(chrome_id => {\n                var params = {\n                    action: \"joinPrivateGroup\",\n                    chrome_id: chrome_id,\n                    group_name: group_name,\n                    group_password: group_password\n                };\n                var data = common.getDataString(params);\n                // check if the group exist. If yes, join the group\n                request.post(data, data => {\n                    if (data.flag) {\n                        $(\n                            \"#tab-private-group #group_name, #tab-private-group #group_password\"\n                        ).val(\"\");\n                        this.fetchGroups();\n                        message.show(data.msg, \"Success\");\n                    } else {\n                        message.show(data.msg, \"Error\");\n                    }\n                });\n            });\n        } else {\n            message.show(\"Enter a groupname. Noob!\", \"Error\");\n        }\n    };\n    this.makeGroupDefault = selector => {\n        var defaultGroup = $(selector).val();\n        if (defaultGroup != \"0\") {\n            var name = $(selector).find(\"option:selected\").text();\n            storage.setItem(\"defaultGroup\", defaultGroup);\n            storage.setItem(\"defaultGroupName\", name);\n            message.show(\"Default group set to \" + name, \"Success\");\n            $(\"#group-display\").html(storage.getItem(\"defaultGroupName\"));\n        } else {\n            message.show(\"Select a group\", \"Error\");\n        }\n    };\n\n    this.groupDDChanged = () => {\n        var group_id = $(\"#settings #groups-dd\").val();\n        $(\".editgroup-block\").addClass(\"hide\");\n        var isAdmin = $(\"#settings #groups-dd option:selected\").attr(\"admin\");\n        var admin_id = $(\"#settings #groups-dd option:selected\").attr(\n            \"admin-id\"\n        );\n\n        if (isAdmin == \"true\") {\n            //allow this fellow to edit the group\n            $(\"#edit-group\").removeClass(\"hide\");\n            $(\"#rename-group-input\").val(\n                $(\"#settings #groups-dd option:selected\").attr(\"name\")\n            );\n        } else {\n            $(\"#edit-group\").addClass(\"hide\");\n            $(\"#rename-group-input\").val(\"\");\n        }\n        $(\"#group-users-block\").addClass(\"hide\");\n        $(\"#group-users-table tbody\").html(\"\");\n\n        if (group_id != \"0\" && isAdmin == \"true\") {\n            auth.getUserId(chrome_id => {\n                let params = {\n                    group: group_id,\n                    chrome_id: chrome_id,\n                    action: \"getGroupUsers\"\n                };\n                var data = common.getDataString(params);\n                request.get(data, data => {\n                    var html = \"\";\n                    data.forEach((item, i) => {\n                        var $html = $(\"#users-template\").clone().find(\"tbody\");\n                        var remove = item.id == admin_id ? \"\" : \"remove\";\n                        html += $html\n                            .html()\n                            .replace(\"{NICKNAME}\", item.nickname)\n                            .replace(\"{USER_ID}\", item.id)\n                            .replace(\"{REMOVE}\", remove)\n                            .replace(\"{\" + item.group_rights + \"}\", \"checked\")\n                            .replace(new RegExp(\"{i}\", \"g\"), i);\n                    });\n                    $(\"#group-users-table tbody\").html(html);\n                    $(\"#group-users-block\").removeClass(\"hide\");\n                });\n            });\n        }\n    };\n\n    this.removeUserFromGroup = e => {\n        var $handle = $(e.target).parents(\".user-item\");\n        var user_id = $handle.data(\"id\");\n        var group_id = $(\"#settings #groups-dd\").val();\n\n        auth.getUserId(chrome_id => {\n            var params = {\n                user_id: user_id,\n                group_id: group_id,\n                action: \"removeUserFromGroup\",\n                chrome_id: chrome_id\n            };\n\n            var data = common.getDataString(params);\n\n            request.post(data, data => {\n                if (data.flag) {\n                    $handle.remove();\n                    message.show(data.msg, \"Success\");\n                } else {\n                    message.show(data.msg, \"Error\");\n                }\n            });\n        });\n    };\n    /**\n     * Prints instructions if the default group is not set.\n     * This is usually seen if the user is not logged in\n     */\n    this.groupNotSetMessage = () => {\n        if (storage.getItem(\"defaultGroup\") === null) {\n            $(\"#wall ul.chat\").html(\n                \"- Login/register to get started<br>- Create a new group or select a group as default<br>- Items from Default group will be displayed here\"\n            );\n            $(\"#updates ul.chat\").html(\n                \"- Login/register to get started<br>- Updates from Non-Default groups will be displayed here.\"\n            );\n        }\n    };\n\n    this.getAllPublicGroups = () => {\n        auth.getUserId(chrome_id => {\n            var params = {\n                chrome_id: chrome_id,\n                action: \"getAllPublicGroups\"\n            };\n            var data = common.getDataString(params);\n\n            request.post(data, data => {\n                var html = \"\";\n                data.forEach(item => {\n                    var status =\n                        item.status == \"1\"\n                            ? \"<a href='#' class='red group-leave'>Leave</a>\"\n                            : \"<a href='#' class='green group-join'>Join</a>\";\n                    html +=\n                        \"<tr data-gid=\" +\n                        item.id +\n                        \"> \\\n                                <td><strong>\" +\n                        item.name +\n                        \"</strong> <br/>\" +\n                        item.desc +\n                        \".</td> \\\n                                <td>\" +\n                        item.group_rights +\n                        \"</td> \\\n                                <td>\" +\n                        item.total +\n                        \"</td> \\\n                                <td>\" +\n                        status +\n                        \"</td> \\\n                            </tr>\";\n                });\n\n                $(\"#tab-public-group tbody\").html(html);\n            });\n        });\n    };\n\n    this.editGroup = e => {\n        $(e.target).addClass(\"hide\");\n        $(\".editgroup-block\").removeClass(\"hide\");\n        var $markup = $(\"#tab-create-group\").clone(); //editgroup-block\n        $markup.find(\"#create-group\").remove();\n        $(\"div.editgroup-block #editgroup-wrapper\")\n            .html($markup.html())\n            .removeClass(\"hide\");\n\n        $handle = $(\"#editgroup-wrapper\");\n        $option = $(\"#tab-manage-group #groups-dd option:selected\");\n\n        //update group name\n        $handle\n            .find(\"#group_name\")\n            .val($option.text().replace(\"(admin)\", \"\").trim());\n        //update group desc //saha\n        $handle.find(\"#group_desc\").val($option.data(\"desc\"));\n        //update private/public visibility\n        $(\n            \"#tab-manage-group #group-visibility .radio[value='\" +\n                $option.attr(\"is_public\") +\n                \"']\"\n        ).attr(\"checked\", \"checked\");\n        //update public rights\n        console.log($option.attr(\"group_rights\"));\n        $(\n            \"#tab-manage-group #group-rights .radio[value='\" +\n                $option.attr(\"group_rights\") +\n                \"']\"\n        ).attr(\"checked\", \"checked\");\n    };\n    this._editGroupSave = () => {\n        var group_name = $(\"#rename-group-input\").val();\n        var group_id = $(\"#settings #groups-dd option:selected\").val();\n\n        auth.getUserId(chrome_id => {\n            request.post(\n                \"name=\" +\n                    group_name +\n                    \"&group_id=\" +\n                    group_id +\n                    \"&chrome_id=\" +\n                    chrome_id +\n                    \"&action=editGroupSave\",\n                data => {\n                    if (data.flag) {\n                        $(\".editgroup-block\").addClass(\"hide\");\n                        message.show(data.msg, \"Success\");\n                        $(\"#edit-group\").removeClass(\"hide\");\n                        $(\"#groups-dd option[value='\" + group_id + \"']\").html(\n                            group_name + \"(admin)\"\n                        );\n\n                        if (storage.getItem(\"defaultGroup\") == group_id) {\n                            storage.setItem(\n                                \"defaultGroupName\",\n                                group_name + \"(admin)\"\n                            );\n                            $(\"#group-display\").html(group_name + \"(admin)\");\n                        }\n                    } else {\n                        //$(\"#edit-group\").removeClass('hide');\n                        message.show(data.msg, \"Error\");\n                    }\n                }\n            );\n        });\n    };\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/group.js","const message = require(\"./message\");\nconst auth = require(\"./auth\");\nconst storage = require(\"./storage\");\nconst request = require(\"./request\");\nconst group = require(\"./group\");\nconst common = require(\"../common/common\");\nconst user = new function() {\n    this.info = {};\n    /**\n     * Greets the user\n     * @param  {String}\n     */\n    this.welcomeUser = nickname => {\n        var logout = '<a href=\"#\" id=\"logout\">Logout</a>';\n        var edit = '<a href=\"#\" id=\"edit-uname\">Edit</a>';\n        $(\".status\").html(\n            \"Connected as <strong>\" + nickname + \"</strong>, \" + logout\n        );\n        $(\"#edit-uname-input\").val(nickname);\n        $(\".step1\").hide();\n    };\n    /**\n     * Some post processing after login/registration\n     */\n    this.afterLogin = data => {\n        if (data.defaultGroup) {\n            storage.setItem(\"defaultGroup\", data.defaultGroup);\n            storage.setItem(\"defaultGroupName\", data.defaultGroupName);\n            storage.setItem(\"uid\", data.uid);\n            $(\"#group-display\").html(data.defaultGroupName);\n            group.fetchGroups();\n        }\n    };\n    /**\n     * Updates username. But lets not allow user to do this.\n     */\n    this._updateUsername = e => {\n        var nickname = $(e.target).val();\n        if (name != \"\") {\n            auth.getUserId(chrome_id => {\n                var params = {\n                    nickname: nickname,\n                    action: \"updateUsername\",\n                    chrome_id: chrome_id\n                };\n\n                var data = common.getDataString(params);\n                request.get(data, data => {\n                    if (data.flag) {\n                        message.show(data.msg, \"Success\");\n                    } else {\n                        message.show(data.msg, \"Error\");\n                    }\n                });\n            });\n        }\n    };\n\n    this.changePublicRights = e => {\n        var $handle = $(e.target).parents(\".user-item\");\n        var user_id = $handle.data(\"id\");\n        var group_id = $(\"#settings #groups-dd\").val();\n        var group_rights = $(e.target).val();\n\n        auth.getUserId(chrome_id => {\n            var params = {\n                user_id: user_id,\n                group_id: group_id,\n                action: \"changePublicRights\",\n                chrome_id: chrome_id,\n                group_rights: group_rights\n            };\n\n            var data = common.getDataString(params);\n\n            request.post(data, data => {\n                if (data.flag) {\n                    message.show(data.msg, \"Success\");\n                } else {\n                    message.show(data.msg, \"Error\");\n                }\n            });\n        });\n    };\n\n    /**\n     * Check if the user exist.\n     * @param  {Function} Callback function\n     */\n    this.userExist = callback => {\n        var data = { flag: 0 };\n        if (storage.getItem(\"loggedIn\") === null) {\n            callback(data);\n        } else {\n            //get the userid and check in the server\n            auth.getUserId(chrome_id => {\n                var params = {\n                    chrome_id: chrome_id,\n                    action: \"fetchUserInfo\"\n                };\n\n                var data = common.getDataString(params);\n\n                request.get(data, response => {\n                    callback(response);\n                });\n            });\n        }\n    };\n}();\n\nmodule.exports = user;\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/user.js","var auth = require(\"./auth\");\nvar request = require(\"./request\");\nvar user = require(\"./user\");\nvar common = require(\"../common/common\");\n\nmodule.exports = new function() {\n    this.commentsPage = 1;\n    this.totalCommentsPages = 0;\n\n    this.sendComment = e => {\n        var $handle = $(e.target).parents(\".item\");\n        var $comments = $handle.find(\".comments-section .comments\");\n        var item_id = $handle.data(\"id\");\n        var comment = $handle.find(\".comment-input\").val().trim();\n\n        if (e.keyCode == 13 && comment.length > 0) {\n            $handle.find(\".comment-input\").val(\"\");\n            auth.getUserId(chrome_id => {\n                var params = {\n                    item_id: item_id,\n                    comment: comment,\n                    chrome_id: chrome_id,\n                    action: \"insertComment\"\n                };\n                request.post(common.getDataString(params), data => {\n                    if (data.flag == 1) {\n                        var $html = $(\"#comment-template\").clone();\n                        var item = $html\n                            .html()\n                            .replace(\"{COMMENT_ID}\", data.id)\n                            .replace(\"{USER_NAME}\", user.info.nickname)\n                            .replace(\"{USER_COMMENT}\", common.escape(comment))\n                            .replace(\"{COLOR}\", user.info.color)\n                            .replace(\"{COMMENT_DATE}\", \"now\");\n                        $comments.prepend(item);\n                    }\n                });\n            });\n        }\n    };\n\n    this.showComments = e => {\n        var $handle = $(e.target).parents(\".item\");\n        var item_id = $handle.data(\"id\");\n        var $comments = $handle.find(\".comments-section .comments\");\n        $comments.parent().toggleClass(\"hide\");\n\n        $comments.html(\"loading...\");\n        this.fetchComments($comments, \"html\", null, item_id);\n    };\n\n    this.fetchComments = ($handle, updateType, count, item_id, callback) => {\n        auth.getUserId(chrome_id => {\n            var params = {\n                commentsPage: this.commentsPage,\n                item_id: item_id,\n                chrome_id: chrome_id,\n                action: \"commentsItem\"\n            };\n            var data = common.getDataString(params);\n            request.get(data, data => {\n                this.totalCommentsPages = data.total;\n                var html = \"\";\n                if (data.rows.length > 0) {\n                    data.rows.forEach(item => {\n                        var $html = $(\"#comment-template\").clone();\n\n                        var item = $html\n                            .html()\n                            .replace(\"{COMMENT_ID}\", item.id)\n                            .replace(\"{USER_NAME}\", item.nickname)\n                            .replace(\n                                \"{USER_COMMENT}\",\n                                common.escape(item.comment)\n                            )\n                            .replace(\"{COLOR}\", item.color)\n                            .replace(\n                                \"{COMMENT_DATE}\",\n                                moment(item.created_at)\n                                    .add(moment().utcOffset(), \"minutes\")\n                                    .fromNow()\n                            );\n                        html += item;\n                    });\n                }\n                if (updateType === \"html\") {\n                    $handle.html(html);\n                } else if (updateType === \"append\") {\n                    $handle.append(html);\n                } else if (updateType === \"prepend\") {\n                    $handle.prepend(html);\n                }\n                if (typeof callback === \"function\") {\n                    callback(html);\n                }\n            });\n        });\n    };\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./dev/js/popup/comments.js"],"sourceRoot":""}